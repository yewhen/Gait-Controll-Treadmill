
Gait Control Treadmill.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  0000098e  00000a22  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000098e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000053  00800104  00800104  00000a26  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000a26  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000a84  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000070  00000000  00000000  00000ac4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000dd8  00000000  00000000  00000b34  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ae3  00000000  00000000  0000190c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000054a  00000000  00000000  000023ef  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000174  00000000  00000000  0000293c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005ec  00000000  00000000  00002ab0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000037c  00000000  00000000  0000309c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000060  00000000  00000000  00003418  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__ctors_end>
   4:	0c 94 33 01 	jmp	0x266	; 0x266 <__vector_1>
   8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
   c:	0c 94 af 00 	jmp	0x15e	; 0x15e <__vector_3>
  10:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  14:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  18:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  1c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  20:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  24:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  28:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  2c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  30:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  34:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  38:	0c 94 9b 00 	jmp	0x136	; 0x136 <__vector_14>
  3c:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__vector_15>
  40:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  44:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  48:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  4c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  50:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  54:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  58:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  5c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  60:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  64:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  68:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  6c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  70:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  74:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  78:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  7c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  80:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  84:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  88:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  8c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  90:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  94:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  98:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  9c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a4:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  ac:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  b0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d8 e0       	ldi	r29, 0x08	; 8
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61

000000c0 <__do_copy_data>:
  c0:	11 e0       	ldi	r17, 0x01	; 1
  c2:	a0 e0       	ldi	r26, 0x00	; 0
  c4:	b1 e0       	ldi	r27, 0x01	; 1
  c6:	ee e8       	ldi	r30, 0x8E	; 142
  c8:	f9 e0       	ldi	r31, 0x09	; 9
  ca:	02 c0       	rjmp	.+4      	; 0xd0 <__do_copy_data+0x10>
  cc:	05 90       	lpm	r0, Z+
  ce:	0d 92       	st	X+, r0
  d0:	a4 30       	cpi	r26, 0x04	; 4
  d2:	b1 07       	cpc	r27, r17
  d4:	d9 f7       	brne	.-10     	; 0xcc <__do_copy_data+0xc>

000000d6 <__do_clear_bss>:
  d6:	21 e0       	ldi	r18, 0x01	; 1
  d8:	a4 e0       	ldi	r26, 0x04	; 4
  da:	b1 e0       	ldi	r27, 0x01	; 1
  dc:	01 c0       	rjmp	.+2      	; 0xe0 <.do_clear_bss_start>

000000de <.do_clear_bss_loop>:
  de:	1d 92       	st	X+, r1

000000e0 <.do_clear_bss_start>:
  e0:	a7 35       	cpi	r26, 0x57	; 87
  e2:	b2 07       	cpc	r27, r18
  e4:	e1 f7       	brne	.-8      	; 0xde <.do_clear_bss_loop>
  e6:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <main>
  ea:	0c 94 c5 04 	jmp	0x98a	; 0x98a <_exit>

000000ee <__bad_interrupt>:
  ee:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000f2 <USART_Init>:

// timer0 overflow interrupt
ISR(TIM1_OVF_vect){
    // increment
    countTimer1 += 65535;
}
  f2:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
  f6:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
  fa:	88 e1       	ldi	r24, 0x18	; 24
  fc:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 100:	86 e0       	ldi	r24, 0x06	; 6
 102:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
 106:	08 95       	ret

00000108 <USART_Transmit>:
 108:	e0 ec       	ldi	r30, 0xC0	; 192
 10a:	f0 e0       	ldi	r31, 0x00	; 0
 10c:	90 81       	ld	r25, Z
 10e:	95 ff       	sbrs	r25, 5
 110:	fd cf       	rjmp	.-6      	; 0x10c <USART_Transmit+0x4>
 112:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 116:	08 95       	ret

00000118 <USART_putstring>:
 118:	cf 93       	push	r28
 11a:	df 93       	push	r29
 11c:	ec 01       	movw	r28, r24
 11e:	88 81       	ld	r24, Y
 120:	88 23       	and	r24, r24
 122:	31 f0       	breq	.+12     	; 0x130 <USART_putstring+0x18>
 124:	21 96       	adiw	r28, 0x01	; 1
 126:	0e 94 84 00 	call	0x108	; 0x108 <USART_Transmit>
 12a:	89 91       	ld	r24, Y+
 12c:	81 11       	cpse	r24, r1
 12e:	fb cf       	rjmp	.-10     	; 0x126 <USART_putstring+0xe>
 130:	df 91       	pop	r29
 132:	cf 91       	pop	r28
 134:	08 95       	ret

00000136 <__vector_14>:
 136:	1f 92       	push	r1
 138:	0f 92       	push	r0
 13a:	0f b6       	in	r0, 0x3f	; 63
 13c:	0f 92       	push	r0
 13e:	11 24       	eor	r1, r1
 140:	0f 90       	pop	r0
 142:	0f be       	out	0x3f, r0	; 63
 144:	0f 90       	pop	r0
 146:	1f 90       	pop	r1
 148:	18 95       	reti

0000014a <__vector_15>:
 14a:	1f 92       	push	r1
 14c:	0f 92       	push	r0
 14e:	0f b6       	in	r0, 0x3f	; 63
 150:	0f 92       	push	r0
 152:	11 24       	eor	r1, r1
 154:	0f 90       	pop	r0
 156:	0f be       	out	0x3f, r0	; 63
 158:	0f 90       	pop	r0
 15a:	1f 90       	pop	r1
 15c:	18 95       	reti

0000015e <__vector_3>:
 15e:	1f 92       	push	r1
 160:	0f 92       	push	r0
 162:	0f b6       	in	r0, 0x3f	; 63
 164:	0f 92       	push	r0
 166:	11 24       	eor	r1, r1
 168:	8f 93       	push	r24
 16a:	9f 93       	push	r25
 16c:	af 93       	push	r26
 16e:	bf 93       	push	r27
 170:	ef 93       	push	r30
 172:	ff 93       	push	r31
 174:	80 91 3f 01 	lds	r24, 0x013F	; 0x80013f <sensors+0x36>
 178:	90 91 40 01 	lds	r25, 0x0140	; 0x800140 <sensors+0x37>
 17c:	01 97       	sbiw	r24, 0x01	; 1
 17e:	81 f4       	brne	.+32     	; 0x1a0 <__vector_3+0x42>
 180:	10 92 a1 00 	sts	0x00A1, r1	; 0x8000a1 <__TEXT_REGION_LENGTH__+0x7e00a1>
 184:	a4 ea       	ldi	r26, 0xA4	; 164
 186:	b0 e0       	ldi	r27, 0x00	; 0
 188:	8d 91       	ld	r24, X+
 18a:	9c 91       	ld	r25, X
 18c:	11 97       	sbiw	r26, 0x01	; 1
 18e:	e9 e0       	ldi	r30, 0x09	; 9
 190:	f1 e0       	ldi	r31, 0x01	; 1
 192:	95 ab       	std	Z+53, r25	; 0x35
 194:	84 ab       	std	Z+52, r24	; 0x34
 196:	11 96       	adiw	r26, 0x01	; 1
 198:	1c 92       	st	X, r1
 19a:	1e 92       	st	-X, r1
 19c:	17 aa       	std	Z+55, r1	; 0x37
 19e:	16 aa       	std	Z+54, r1	; 0x36
 1a0:	80 91 3f 01 	lds	r24, 0x013F	; 0x80013f <sensors+0x36>
 1a4:	90 91 40 01 	lds	r25, 0x0140	; 0x800140 <sensors+0x37>
 1a8:	89 2b       	or	r24, r25
 1aa:	59 f4       	brne	.+22     	; 0x1c2 <__vector_3+0x64>
 1ac:	e1 ea       	ldi	r30, 0xA1	; 161
 1ae:	f0 e0       	ldi	r31, 0x00	; 0
 1b0:	80 81       	ld	r24, Z
 1b2:	81 60       	ori	r24, 0x01	; 1
 1b4:	80 83       	st	Z, r24
 1b6:	81 e0       	ldi	r24, 0x01	; 1
 1b8:	90 e0       	ldi	r25, 0x00	; 0
 1ba:	90 93 40 01 	sts	0x0140, r25	; 0x800140 <sensors+0x37>
 1be:	80 93 3f 01 	sts	0x013F, r24	; 0x80013f <sensors+0x36>
 1c2:	ff 91       	pop	r31
 1c4:	ef 91       	pop	r30
 1c6:	bf 91       	pop	r27
 1c8:	af 91       	pop	r26
 1ca:	9f 91       	pop	r25
 1cc:	8f 91       	pop	r24
 1ce:	0f 90       	pop	r0
 1d0:	0f be       	out	0x3f, r0	; 63
 1d2:	0f 90       	pop	r0
 1d4:	1f 90       	pop	r1
 1d6:	18 95       	reti

000001d8 <getDistanceHCSR04>:
 1d8:	f8 94       	cli
 1da:	e9 e6       	ldi	r30, 0x69	; 105
 1dc:	f0 e0       	ldi	r31, 0x00	; 0
 1de:	80 81       	ld	r24, Z
 1e0:	81 60       	ori	r24, 0x01	; 1
 1e2:	80 83       	st	Z, r24
 1e4:	e8 9a       	sbi	0x1d, 0	; 29
 1e6:	78 94       	sei
 1e8:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <echoDone>
 1ec:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <__data_end>
 1f0:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <__data_end+0x1>
 1f4:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <__data_end+0x2>
 1f8:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__data_end+0x3>
 1fc:	2b 98       	cbi	0x05, 3	; 5
 1fe:	86 e0       	ldi	r24, 0x06	; 6
 200:	8a 95       	dec	r24
 202:	f1 f7       	brne	.-4      	; 0x200 <getDistanceHCSR04+0x28>
 204:	00 c0       	rjmp	.+0      	; 0x206 <getDistanceHCSR04+0x2e>
 206:	2b 9a       	sbi	0x05, 3	; 5
 208:	84 e0       	ldi	r24, 0x04	; 4
 20a:	8a 95       	dec	r24
 20c:	f1 f7       	brne	.-4      	; 0x20a <getDistanceHCSR04+0x32>
 20e:	2b 98       	cbi	0x05, 3	; 5
 210:	86 e0       	ldi	r24, 0x06	; 6
 212:	8a 95       	dec	r24
 214:	f1 f7       	brne	.-4      	; 0x212 <getDistanceHCSR04+0x3a>
 216:	00 c0       	rjmp	.+0      	; 0x218 <getDistanceHCSR04+0x40>
 218:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <echoDone>
 21c:	81 11       	cpse	r24, r1
 21e:	05 c0       	rjmp	.+10     	; 0x22a <getDistanceHCSR04+0x52>
 220:	1d 9a       	sbi	0x03, 5	; 3
 222:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <echoDone>
 226:	88 23       	and	r24, r24
 228:	d9 f3       	breq	.-10     	; 0x220 <getDistanceHCSR04+0x48>
 22a:	e9 e6       	ldi	r30, 0x69	; 105
 22c:	f0 e0       	ldi	r31, 0x00	; 0
 22e:	80 81       	ld	r24, Z
 230:	8e 7f       	andi	r24, 0xFE	; 254
 232:	80 83       	st	Z, r24
 234:	e8 98       	cbi	0x1d, 0	; 29
 236:	60 91 04 01 	lds	r22, 0x0104	; 0x800104 <__data_end>
 23a:	70 91 05 01 	lds	r23, 0x0105	; 0x800105 <__data_end+0x1>
 23e:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <__data_end+0x2>
 242:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <__data_end+0x3>
 246:	20 e0       	ldi	r18, 0x00	; 0
 248:	34 e2       	ldi	r19, 0x24	; 36
 24a:	44 ef       	ldi	r20, 0xF4	; 244
 24c:	50 e0       	ldi	r21, 0x00	; 0
 24e:	0e 94 b9 01 	call	0x372	; 0x372 <__udivmodsi4>
 252:	65 e7       	ldi	r22, 0x75	; 117
 254:	72 e4       	ldi	r23, 0x42	; 66
 256:	26 9f       	mul	r18, r22
 258:	c0 01       	movw	r24, r0
 25a:	27 9f       	mul	r18, r23
 25c:	90 0d       	add	r25, r0
 25e:	36 9f       	mul	r19, r22
 260:	90 0d       	add	r25, r0
 262:	11 24       	eor	r1, r1
 264:	08 95       	ret

00000266 <__vector_1>:

// pin-change interrupt handler
ISR(INT0_vect){
 266:	1f 92       	push	r1
 268:	0f 92       	push	r0
 26a:	0f b6       	in	r0, 0x3f	; 63
 26c:	0f 92       	push	r0
 26e:	11 24       	eor	r1, r1
 270:	2f 93       	push	r18
 272:	3f 93       	push	r19
 274:	8f 93       	push	r24
 276:	9f 93       	push	r25
 278:	af 93       	push	r26
 27a:	bf 93       	push	r27
 27c:	ef 93       	push	r30
 27e:	ff 93       	push	r31
    // read PORTD2:
    if (PIND & (1 << PORTD2)) {
 280:	4a 9b       	sbis	0x09, 2	; 9
 282:	0b c0       	rjmp	.+22     	; 0x29a <__vector_1+0x34>
        // rising edge:
        // start 16-bit timer
        // Divide by 1
        TCCR1B |= (1<<CS10);
 284:	e1 e8       	ldi	r30, 0x81	; 129
 286:	f0 e0       	ldi	r31, 0x00	; 0
 288:	80 81       	ld	r24, Z
 28a:	81 60       	ori	r24, 0x01	; 1
 28c:	80 83       	st	Z, r24
        // set overflow interrupt flag
        TIMSK1 |= 1<<TOIE1;
 28e:	ef e6       	ldi	r30, 0x6F	; 111
 290:	f0 e0       	ldi	r31, 0x00	; 0
 292:	80 81       	ld	r24, Z
 294:	81 60       	ori	r24, 0x01	; 1
 296:	80 83       	st	Z, r24
 298:	22 c0       	rjmp	.+68     	; 0x2de <__vector_1+0x78>
    }
    else {
        // falling edge
        // stop timer
        TCCR1B &= ~(1<<CS10);
 29a:	e1 e8       	ldi	r30, 0x81	; 129
 29c:	f0 e0       	ldi	r31, 0x00	; 0
 29e:	80 81       	ld	r24, Z
 2a0:	8e 7f       	andi	r24, 0xFE	; 254
 2a2:	80 83       	st	Z, r24
        // calculate time passed
        countTimer1 += TCNT1;
 2a4:	e4 e8       	ldi	r30, 0x84	; 132
 2a6:	f0 e0       	ldi	r31, 0x00	; 0
 2a8:	20 81       	ld	r18, Z
 2aa:	31 81       	ldd	r19, Z+1	; 0x01
 2ac:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <__data_end>
 2b0:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <__data_end+0x1>
 2b4:	a0 91 06 01 	lds	r26, 0x0106	; 0x800106 <__data_end+0x2>
 2b8:	b0 91 07 01 	lds	r27, 0x0107	; 0x800107 <__data_end+0x3>
 2bc:	82 0f       	add	r24, r18
 2be:	93 1f       	adc	r25, r19
 2c0:	a1 1d       	adc	r26, r1
 2c2:	b1 1d       	adc	r27, r1
 2c4:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__data_end>
 2c8:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <__data_end+0x1>
 2cc:	a0 93 06 01 	sts	0x0106, r26	; 0x800106 <__data_end+0x2>
 2d0:	b0 93 07 01 	sts	0x0107, r27	; 0x800107 <__data_end+0x3>
        // reset counter in timer0
        TCNT1 = 0;
 2d4:	11 82       	std	Z+1, r1	; 0x01
 2d6:	10 82       	st	Z, r1
        // set flag
        echoDone = 1;
 2d8:	81 e0       	ldi	r24, 0x01	; 1
 2da:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <echoDone>
    }
}
 2de:	ff 91       	pop	r31
 2e0:	ef 91       	pop	r30
 2e2:	bf 91       	pop	r27
 2e4:	af 91       	pop	r26
 2e6:	9f 91       	pop	r25
 2e8:	8f 91       	pop	r24
 2ea:	3f 91       	pop	r19
 2ec:	2f 91       	pop	r18
 2ee:	0f 90       	pop	r0
 2f0:	0f be       	out	0x3f, r0	; 63
 2f2:	0f 90       	pop	r0
 2f4:	1f 90       	pop	r1
 2f6:	18 95       	reti

000002f8 <main>:

int main(){
 2f8:	cf 93       	push	r28
 2fa:	df 93       	push	r29
 2fc:	cd b7       	in	r28, 0x3d	; 61
 2fe:	de b7       	in	r29, 0x3e	; 62
 300:	63 97       	sbiw	r28, 0x13	; 19
 302:	0f b6       	in	r0, 0x3f	; 63
 304:	f8 94       	cli
 306:	de bf       	out	0x3e, r29	; 62
 308:	0f be       	out	0x3f, r0	; 63
 30a:	cd bf       	out	0x3d, r28	; 61
    // HC-SR04
    DDRB |= (1<<PORTB3);
 30c:	23 9a       	sbi	0x04, 3	; 4
    DDRD &= ~(1<<PORTD2);
 30e:	52 98       	cbi	0x0a, 2	; 10
	PORTD |= (1<<PORTD2);
 310:	5a 9a       	sbi	0x0b, 2	; 11
    USART_Init(MYUBBR);
 312:	87 e6       	ldi	r24, 0x67	; 103
 314:	90 e0       	ldi	r25, 0x00	; 0
 316:	0e 94 79 00 	call	0xf2	; 0xf2 <USART_Init>
    
    char str[16];
    char space[] = " .";
 31a:	80 e2       	ldi	r24, 0x20	; 32
 31c:	9e e2       	ldi	r25, 0x2E	; 46
 31e:	9a 8b       	std	Y+18, r25	; 0x12
 320:	89 8b       	std	Y+17, r24	; 0x11
 322:	1b 8a       	std	Y+19, r1	; 0x13
    while (1) {
        int dist = getDistanceHCSR04();
        // sensor only works till 400 cm - if it exceeds, this value just send previous reading
        //if (dist > 400 || dist < 2) dist = prevDist;
        
        sprintf(str, "%d\n", dist);
 324:	0f 2e       	mov	r0, r31
 326:	f0 e0       	ldi	r31, 0x00	; 0
 328:	ef 2e       	mov	r14, r31
 32a:	f1 e0       	ldi	r31, 0x01	; 1
 32c:	ff 2e       	mov	r15, r31
 32e:	f0 2d       	mov	r31, r0
 330:	8e 01       	movw	r16, r28
 332:	0f 5f       	subi	r16, 0xFF	; 255
 334:	1f 4f       	sbci	r17, 0xFF	; 255
    char str[16];
    char space[] = " .";
    int prevDist = 0;

    while (1) {
        int dist = getDistanceHCSR04();
 336:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <getDistanceHCSR04>
        // sensor only works till 400 cm - if it exceeds, this value just send previous reading
        //if (dist > 400 || dist < 2) dist = prevDist;
        
        sprintf(str, "%d\n", dist);
 33a:	9f 93       	push	r25
 33c:	8f 93       	push	r24
 33e:	ff 92       	push	r15
 340:	ef 92       	push	r14
 342:	1f 93       	push	r17
 344:	0f 93       	push	r16
 346:	0e 94 db 01 	call	0x3b6	; 0x3b6 <sprintf>
        USART_putstring(str);
 34a:	c8 01       	movw	r24, r16
 34c:	0e 94 8c 00 	call	0x118	; 0x118 <USART_putstring>
		USART_putstring(space);
 350:	ce 01       	movw	r24, r28
 352:	41 96       	adiw	r24, 0x11	; 17
 354:	0e 94 8c 00 	call	0x118	; 0x118 <USART_putstring>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 358:	8b e5       	ldi	r24, 0x5B	; 91
 35a:	94 e4       	ldi	r25, 0x44	; 68
 35c:	01 97       	sbiw	r24, 0x01	; 1
 35e:	f1 f7       	brne	.-4      	; 0x35c <main+0x64>
 360:	00 c0       	rjmp	.+0      	; 0x362 <main+0x6a>
 362:	00 00       	nop
 364:	0f 90       	pop	r0
 366:	0f 90       	pop	r0
 368:	0f 90       	pop	r0
 36a:	0f 90       	pop	r0
 36c:	0f 90       	pop	r0
 36e:	0f 90       	pop	r0
 370:	e2 cf       	rjmp	.-60     	; 0x336 <main+0x3e>

00000372 <__udivmodsi4>:
 372:	a1 e2       	ldi	r26, 0x21	; 33
 374:	1a 2e       	mov	r1, r26
 376:	aa 1b       	sub	r26, r26
 378:	bb 1b       	sub	r27, r27
 37a:	fd 01       	movw	r30, r26
 37c:	0d c0       	rjmp	.+26     	; 0x398 <__udivmodsi4_ep>

0000037e <__udivmodsi4_loop>:
 37e:	aa 1f       	adc	r26, r26
 380:	bb 1f       	adc	r27, r27
 382:	ee 1f       	adc	r30, r30
 384:	ff 1f       	adc	r31, r31
 386:	a2 17       	cp	r26, r18
 388:	b3 07       	cpc	r27, r19
 38a:	e4 07       	cpc	r30, r20
 38c:	f5 07       	cpc	r31, r21
 38e:	20 f0       	brcs	.+8      	; 0x398 <__udivmodsi4_ep>
 390:	a2 1b       	sub	r26, r18
 392:	b3 0b       	sbc	r27, r19
 394:	e4 0b       	sbc	r30, r20
 396:	f5 0b       	sbc	r31, r21

00000398 <__udivmodsi4_ep>:
 398:	66 1f       	adc	r22, r22
 39a:	77 1f       	adc	r23, r23
 39c:	88 1f       	adc	r24, r24
 39e:	99 1f       	adc	r25, r25
 3a0:	1a 94       	dec	r1
 3a2:	69 f7       	brne	.-38     	; 0x37e <__udivmodsi4_loop>
 3a4:	60 95       	com	r22
 3a6:	70 95       	com	r23
 3a8:	80 95       	com	r24
 3aa:	90 95       	com	r25
 3ac:	9b 01       	movw	r18, r22
 3ae:	ac 01       	movw	r20, r24
 3b0:	bd 01       	movw	r22, r26
 3b2:	cf 01       	movw	r24, r30
 3b4:	08 95       	ret

000003b6 <sprintf>:
 3b6:	ae e0       	ldi	r26, 0x0E	; 14
 3b8:	b0 e0       	ldi	r27, 0x00	; 0
 3ba:	e1 ee       	ldi	r30, 0xE1	; 225
 3bc:	f1 e0       	ldi	r31, 0x01	; 1
 3be:	0c 94 9c 04 	jmp	0x938	; 0x938 <__prologue_saves__+0x1c>
 3c2:	0d 89       	ldd	r16, Y+21	; 0x15
 3c4:	1e 89       	ldd	r17, Y+22	; 0x16
 3c6:	86 e0       	ldi	r24, 0x06	; 6
 3c8:	8c 83       	std	Y+4, r24	; 0x04
 3ca:	1a 83       	std	Y+2, r17	; 0x02
 3cc:	09 83       	std	Y+1, r16	; 0x01
 3ce:	8f ef       	ldi	r24, 0xFF	; 255
 3d0:	9f e7       	ldi	r25, 0x7F	; 127
 3d2:	9e 83       	std	Y+6, r25	; 0x06
 3d4:	8d 83       	std	Y+5, r24	; 0x05
 3d6:	ae 01       	movw	r20, r28
 3d8:	47 5e       	subi	r20, 0xE7	; 231
 3da:	5f 4f       	sbci	r21, 0xFF	; 255
 3dc:	6f 89       	ldd	r22, Y+23	; 0x17
 3de:	78 8d       	ldd	r23, Y+24	; 0x18
 3e0:	ce 01       	movw	r24, r28
 3e2:	01 96       	adiw	r24, 0x01	; 1
 3e4:	0e 94 fd 01 	call	0x3fa	; 0x3fa <vfprintf>
 3e8:	ef 81       	ldd	r30, Y+7	; 0x07
 3ea:	f8 85       	ldd	r31, Y+8	; 0x08
 3ec:	e0 0f       	add	r30, r16
 3ee:	f1 1f       	adc	r31, r17
 3f0:	10 82       	st	Z, r1
 3f2:	2e 96       	adiw	r28, 0x0e	; 14
 3f4:	e4 e0       	ldi	r30, 0x04	; 4
 3f6:	0c 94 b8 04 	jmp	0x970	; 0x970 <__epilogue_restores__+0x1c>

000003fa <vfprintf>:
 3fa:	ab e0       	ldi	r26, 0x0B	; 11
 3fc:	b0 e0       	ldi	r27, 0x00	; 0
 3fe:	e3 e0       	ldi	r30, 0x03	; 3
 400:	f2 e0       	ldi	r31, 0x02	; 2
 402:	0c 94 8e 04 	jmp	0x91c	; 0x91c <__prologue_saves__>
 406:	6c 01       	movw	r12, r24
 408:	7b 01       	movw	r14, r22
 40a:	8a 01       	movw	r16, r20
 40c:	fc 01       	movw	r30, r24
 40e:	17 82       	std	Z+7, r1	; 0x07
 410:	16 82       	std	Z+6, r1	; 0x06
 412:	83 81       	ldd	r24, Z+3	; 0x03
 414:	81 ff       	sbrs	r24, 1
 416:	cc c1       	rjmp	.+920    	; 0x7b0 <__LOCK_REGION_LENGTH__+0x3b0>
 418:	ce 01       	movw	r24, r28
 41a:	01 96       	adiw	r24, 0x01	; 1
 41c:	3c 01       	movw	r6, r24
 41e:	f6 01       	movw	r30, r12
 420:	93 81       	ldd	r25, Z+3	; 0x03
 422:	f7 01       	movw	r30, r14
 424:	93 fd       	sbrc	r25, 3
 426:	85 91       	lpm	r24, Z+
 428:	93 ff       	sbrs	r25, 3
 42a:	81 91       	ld	r24, Z+
 42c:	7f 01       	movw	r14, r30
 42e:	88 23       	and	r24, r24
 430:	09 f4       	brne	.+2      	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 432:	ba c1       	rjmp	.+884    	; 0x7a8 <__LOCK_REGION_LENGTH__+0x3a8>
 434:	85 32       	cpi	r24, 0x25	; 37
 436:	39 f4       	brne	.+14     	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 438:	93 fd       	sbrc	r25, 3
 43a:	85 91       	lpm	r24, Z+
 43c:	93 ff       	sbrs	r25, 3
 43e:	81 91       	ld	r24, Z+
 440:	7f 01       	movw	r14, r30
 442:	85 32       	cpi	r24, 0x25	; 37
 444:	29 f4       	brne	.+10     	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
 446:	b6 01       	movw	r22, r12
 448:	90 e0       	ldi	r25, 0x00	; 0
 44a:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <fputc>
 44e:	e7 cf       	rjmp	.-50     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 450:	91 2c       	mov	r9, r1
 452:	21 2c       	mov	r2, r1
 454:	31 2c       	mov	r3, r1
 456:	ff e1       	ldi	r31, 0x1F	; 31
 458:	f3 15       	cp	r31, r3
 45a:	d8 f0       	brcs	.+54     	; 0x492 <__LOCK_REGION_LENGTH__+0x92>
 45c:	8b 32       	cpi	r24, 0x2B	; 43
 45e:	79 f0       	breq	.+30     	; 0x47e <__LOCK_REGION_LENGTH__+0x7e>
 460:	38 f4       	brcc	.+14     	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
 462:	80 32       	cpi	r24, 0x20	; 32
 464:	79 f0       	breq	.+30     	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
 466:	83 32       	cpi	r24, 0x23	; 35
 468:	a1 f4       	brne	.+40     	; 0x492 <__LOCK_REGION_LENGTH__+0x92>
 46a:	23 2d       	mov	r18, r3
 46c:	20 61       	ori	r18, 0x10	; 16
 46e:	1d c0       	rjmp	.+58     	; 0x4aa <__LOCK_REGION_LENGTH__+0xaa>
 470:	8d 32       	cpi	r24, 0x2D	; 45
 472:	61 f0       	breq	.+24     	; 0x48c <__LOCK_REGION_LENGTH__+0x8c>
 474:	80 33       	cpi	r24, 0x30	; 48
 476:	69 f4       	brne	.+26     	; 0x492 <__LOCK_REGION_LENGTH__+0x92>
 478:	23 2d       	mov	r18, r3
 47a:	21 60       	ori	r18, 0x01	; 1
 47c:	16 c0       	rjmp	.+44     	; 0x4aa <__LOCK_REGION_LENGTH__+0xaa>
 47e:	83 2d       	mov	r24, r3
 480:	82 60       	ori	r24, 0x02	; 2
 482:	38 2e       	mov	r3, r24
 484:	e3 2d       	mov	r30, r3
 486:	e4 60       	ori	r30, 0x04	; 4
 488:	3e 2e       	mov	r3, r30
 48a:	2a c0       	rjmp	.+84     	; 0x4e0 <__LOCK_REGION_LENGTH__+0xe0>
 48c:	f3 2d       	mov	r31, r3
 48e:	f8 60       	ori	r31, 0x08	; 8
 490:	1d c0       	rjmp	.+58     	; 0x4cc <__LOCK_REGION_LENGTH__+0xcc>
 492:	37 fc       	sbrc	r3, 7
 494:	2d c0       	rjmp	.+90     	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
 496:	20 ed       	ldi	r18, 0xD0	; 208
 498:	28 0f       	add	r18, r24
 49a:	2a 30       	cpi	r18, 0x0A	; 10
 49c:	40 f0       	brcs	.+16     	; 0x4ae <__LOCK_REGION_LENGTH__+0xae>
 49e:	8e 32       	cpi	r24, 0x2E	; 46
 4a0:	b9 f4       	brne	.+46     	; 0x4d0 <__LOCK_REGION_LENGTH__+0xd0>
 4a2:	36 fc       	sbrc	r3, 6
 4a4:	81 c1       	rjmp	.+770    	; 0x7a8 <__LOCK_REGION_LENGTH__+0x3a8>
 4a6:	23 2d       	mov	r18, r3
 4a8:	20 64       	ori	r18, 0x40	; 64
 4aa:	32 2e       	mov	r3, r18
 4ac:	19 c0       	rjmp	.+50     	; 0x4e0 <__LOCK_REGION_LENGTH__+0xe0>
 4ae:	36 fe       	sbrs	r3, 6
 4b0:	06 c0       	rjmp	.+12     	; 0x4be <__LOCK_REGION_LENGTH__+0xbe>
 4b2:	8a e0       	ldi	r24, 0x0A	; 10
 4b4:	98 9e       	mul	r9, r24
 4b6:	20 0d       	add	r18, r0
 4b8:	11 24       	eor	r1, r1
 4ba:	92 2e       	mov	r9, r18
 4bc:	11 c0       	rjmp	.+34     	; 0x4e0 <__LOCK_REGION_LENGTH__+0xe0>
 4be:	ea e0       	ldi	r30, 0x0A	; 10
 4c0:	2e 9e       	mul	r2, r30
 4c2:	20 0d       	add	r18, r0
 4c4:	11 24       	eor	r1, r1
 4c6:	22 2e       	mov	r2, r18
 4c8:	f3 2d       	mov	r31, r3
 4ca:	f0 62       	ori	r31, 0x20	; 32
 4cc:	3f 2e       	mov	r3, r31
 4ce:	08 c0       	rjmp	.+16     	; 0x4e0 <__LOCK_REGION_LENGTH__+0xe0>
 4d0:	8c 36       	cpi	r24, 0x6C	; 108
 4d2:	21 f4       	brne	.+8      	; 0x4dc <__LOCK_REGION_LENGTH__+0xdc>
 4d4:	83 2d       	mov	r24, r3
 4d6:	80 68       	ori	r24, 0x80	; 128
 4d8:	38 2e       	mov	r3, r24
 4da:	02 c0       	rjmp	.+4      	; 0x4e0 <__LOCK_REGION_LENGTH__+0xe0>
 4dc:	88 36       	cpi	r24, 0x68	; 104
 4de:	41 f4       	brne	.+16     	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
 4e0:	f7 01       	movw	r30, r14
 4e2:	93 fd       	sbrc	r25, 3
 4e4:	85 91       	lpm	r24, Z+
 4e6:	93 ff       	sbrs	r25, 3
 4e8:	81 91       	ld	r24, Z+
 4ea:	7f 01       	movw	r14, r30
 4ec:	81 11       	cpse	r24, r1
 4ee:	b3 cf       	rjmp	.-154    	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
 4f0:	98 2f       	mov	r25, r24
 4f2:	9f 7d       	andi	r25, 0xDF	; 223
 4f4:	95 54       	subi	r25, 0x45	; 69
 4f6:	93 30       	cpi	r25, 0x03	; 3
 4f8:	28 f4       	brcc	.+10     	; 0x504 <__LOCK_REGION_LENGTH__+0x104>
 4fa:	0c 5f       	subi	r16, 0xFC	; 252
 4fc:	1f 4f       	sbci	r17, 0xFF	; 255
 4fe:	9f e3       	ldi	r25, 0x3F	; 63
 500:	99 83       	std	Y+1, r25	; 0x01
 502:	0d c0       	rjmp	.+26     	; 0x51e <__LOCK_REGION_LENGTH__+0x11e>
 504:	83 36       	cpi	r24, 0x63	; 99
 506:	31 f0       	breq	.+12     	; 0x514 <__LOCK_REGION_LENGTH__+0x114>
 508:	83 37       	cpi	r24, 0x73	; 115
 50a:	71 f0       	breq	.+28     	; 0x528 <__LOCK_REGION_LENGTH__+0x128>
 50c:	83 35       	cpi	r24, 0x53	; 83
 50e:	09 f0       	breq	.+2      	; 0x512 <__LOCK_REGION_LENGTH__+0x112>
 510:	59 c0       	rjmp	.+178    	; 0x5c4 <__LOCK_REGION_LENGTH__+0x1c4>
 512:	21 c0       	rjmp	.+66     	; 0x556 <__LOCK_REGION_LENGTH__+0x156>
 514:	f8 01       	movw	r30, r16
 516:	80 81       	ld	r24, Z
 518:	89 83       	std	Y+1, r24	; 0x01
 51a:	0e 5f       	subi	r16, 0xFE	; 254
 51c:	1f 4f       	sbci	r17, 0xFF	; 255
 51e:	88 24       	eor	r8, r8
 520:	83 94       	inc	r8
 522:	91 2c       	mov	r9, r1
 524:	53 01       	movw	r10, r6
 526:	13 c0       	rjmp	.+38     	; 0x54e <__LOCK_REGION_LENGTH__+0x14e>
 528:	28 01       	movw	r4, r16
 52a:	f2 e0       	ldi	r31, 0x02	; 2
 52c:	4f 0e       	add	r4, r31
 52e:	51 1c       	adc	r5, r1
 530:	f8 01       	movw	r30, r16
 532:	a0 80       	ld	r10, Z
 534:	b1 80       	ldd	r11, Z+1	; 0x01
 536:	36 fe       	sbrs	r3, 6
 538:	03 c0       	rjmp	.+6      	; 0x540 <__LOCK_REGION_LENGTH__+0x140>
 53a:	69 2d       	mov	r22, r9
 53c:	70 e0       	ldi	r23, 0x00	; 0
 53e:	02 c0       	rjmp	.+4      	; 0x544 <__LOCK_REGION_LENGTH__+0x144>
 540:	6f ef       	ldi	r22, 0xFF	; 255
 542:	7f ef       	ldi	r23, 0xFF	; 255
 544:	c5 01       	movw	r24, r10
 546:	0e 94 e9 03 	call	0x7d2	; 0x7d2 <strnlen>
 54a:	4c 01       	movw	r8, r24
 54c:	82 01       	movw	r16, r4
 54e:	f3 2d       	mov	r31, r3
 550:	ff 77       	andi	r31, 0x7F	; 127
 552:	3f 2e       	mov	r3, r31
 554:	16 c0       	rjmp	.+44     	; 0x582 <__LOCK_REGION_LENGTH__+0x182>
 556:	28 01       	movw	r4, r16
 558:	22 e0       	ldi	r18, 0x02	; 2
 55a:	42 0e       	add	r4, r18
 55c:	51 1c       	adc	r5, r1
 55e:	f8 01       	movw	r30, r16
 560:	a0 80       	ld	r10, Z
 562:	b1 80       	ldd	r11, Z+1	; 0x01
 564:	36 fe       	sbrs	r3, 6
 566:	03 c0       	rjmp	.+6      	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>
 568:	69 2d       	mov	r22, r9
 56a:	70 e0       	ldi	r23, 0x00	; 0
 56c:	02 c0       	rjmp	.+4      	; 0x572 <__LOCK_REGION_LENGTH__+0x172>
 56e:	6f ef       	ldi	r22, 0xFF	; 255
 570:	7f ef       	ldi	r23, 0xFF	; 255
 572:	c5 01       	movw	r24, r10
 574:	0e 94 de 03 	call	0x7bc	; 0x7bc <strnlen_P>
 578:	4c 01       	movw	r8, r24
 57a:	f3 2d       	mov	r31, r3
 57c:	f0 68       	ori	r31, 0x80	; 128
 57e:	3f 2e       	mov	r3, r31
 580:	82 01       	movw	r16, r4
 582:	33 fc       	sbrc	r3, 3
 584:	1b c0       	rjmp	.+54     	; 0x5bc <__LOCK_REGION_LENGTH__+0x1bc>
 586:	82 2d       	mov	r24, r2
 588:	90 e0       	ldi	r25, 0x00	; 0
 58a:	88 16       	cp	r8, r24
 58c:	99 06       	cpc	r9, r25
 58e:	b0 f4       	brcc	.+44     	; 0x5bc <__LOCK_REGION_LENGTH__+0x1bc>
 590:	b6 01       	movw	r22, r12
 592:	80 e2       	ldi	r24, 0x20	; 32
 594:	90 e0       	ldi	r25, 0x00	; 0
 596:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <fputc>
 59a:	2a 94       	dec	r2
 59c:	f4 cf       	rjmp	.-24     	; 0x586 <__LOCK_REGION_LENGTH__+0x186>
 59e:	f5 01       	movw	r30, r10
 5a0:	37 fc       	sbrc	r3, 7
 5a2:	85 91       	lpm	r24, Z+
 5a4:	37 fe       	sbrs	r3, 7
 5a6:	81 91       	ld	r24, Z+
 5a8:	5f 01       	movw	r10, r30
 5aa:	b6 01       	movw	r22, r12
 5ac:	90 e0       	ldi	r25, 0x00	; 0
 5ae:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <fputc>
 5b2:	21 10       	cpse	r2, r1
 5b4:	2a 94       	dec	r2
 5b6:	21 e0       	ldi	r18, 0x01	; 1
 5b8:	82 1a       	sub	r8, r18
 5ba:	91 08       	sbc	r9, r1
 5bc:	81 14       	cp	r8, r1
 5be:	91 04       	cpc	r9, r1
 5c0:	71 f7       	brne	.-36     	; 0x59e <__LOCK_REGION_LENGTH__+0x19e>
 5c2:	e8 c0       	rjmp	.+464    	; 0x794 <__LOCK_REGION_LENGTH__+0x394>
 5c4:	84 36       	cpi	r24, 0x64	; 100
 5c6:	11 f0       	breq	.+4      	; 0x5cc <__LOCK_REGION_LENGTH__+0x1cc>
 5c8:	89 36       	cpi	r24, 0x69	; 105
 5ca:	41 f5       	brne	.+80     	; 0x61c <__LOCK_REGION_LENGTH__+0x21c>
 5cc:	f8 01       	movw	r30, r16
 5ce:	37 fe       	sbrs	r3, 7
 5d0:	07 c0       	rjmp	.+14     	; 0x5e0 <__LOCK_REGION_LENGTH__+0x1e0>
 5d2:	60 81       	ld	r22, Z
 5d4:	71 81       	ldd	r23, Z+1	; 0x01
 5d6:	82 81       	ldd	r24, Z+2	; 0x02
 5d8:	93 81       	ldd	r25, Z+3	; 0x03
 5da:	0c 5f       	subi	r16, 0xFC	; 252
 5dc:	1f 4f       	sbci	r17, 0xFF	; 255
 5de:	08 c0       	rjmp	.+16     	; 0x5f0 <__LOCK_REGION_LENGTH__+0x1f0>
 5e0:	60 81       	ld	r22, Z
 5e2:	71 81       	ldd	r23, Z+1	; 0x01
 5e4:	07 2e       	mov	r0, r23
 5e6:	00 0c       	add	r0, r0
 5e8:	88 0b       	sbc	r24, r24
 5ea:	99 0b       	sbc	r25, r25
 5ec:	0e 5f       	subi	r16, 0xFE	; 254
 5ee:	1f 4f       	sbci	r17, 0xFF	; 255
 5f0:	f3 2d       	mov	r31, r3
 5f2:	ff 76       	andi	r31, 0x6F	; 111
 5f4:	3f 2e       	mov	r3, r31
 5f6:	97 ff       	sbrs	r25, 7
 5f8:	09 c0       	rjmp	.+18     	; 0x60c <__LOCK_REGION_LENGTH__+0x20c>
 5fa:	90 95       	com	r25
 5fc:	80 95       	com	r24
 5fe:	70 95       	com	r23
 600:	61 95       	neg	r22
 602:	7f 4f       	sbci	r23, 0xFF	; 255
 604:	8f 4f       	sbci	r24, 0xFF	; 255
 606:	9f 4f       	sbci	r25, 0xFF	; 255
 608:	f0 68       	ori	r31, 0x80	; 128
 60a:	3f 2e       	mov	r3, r31
 60c:	2a e0       	ldi	r18, 0x0A	; 10
 60e:	30 e0       	ldi	r19, 0x00	; 0
 610:	a3 01       	movw	r20, r6
 612:	0e 94 30 04 	call	0x860	; 0x860 <__ultoa_invert>
 616:	88 2e       	mov	r8, r24
 618:	86 18       	sub	r8, r6
 61a:	45 c0       	rjmp	.+138    	; 0x6a6 <__LOCK_REGION_LENGTH__+0x2a6>
 61c:	85 37       	cpi	r24, 0x75	; 117
 61e:	31 f4       	brne	.+12     	; 0x62c <__LOCK_REGION_LENGTH__+0x22c>
 620:	23 2d       	mov	r18, r3
 622:	2f 7e       	andi	r18, 0xEF	; 239
 624:	b2 2e       	mov	r11, r18
 626:	2a e0       	ldi	r18, 0x0A	; 10
 628:	30 e0       	ldi	r19, 0x00	; 0
 62a:	25 c0       	rjmp	.+74     	; 0x676 <__LOCK_REGION_LENGTH__+0x276>
 62c:	93 2d       	mov	r25, r3
 62e:	99 7f       	andi	r25, 0xF9	; 249
 630:	b9 2e       	mov	r11, r25
 632:	8f 36       	cpi	r24, 0x6F	; 111
 634:	c1 f0       	breq	.+48     	; 0x666 <__LOCK_REGION_LENGTH__+0x266>
 636:	18 f4       	brcc	.+6      	; 0x63e <__LOCK_REGION_LENGTH__+0x23e>
 638:	88 35       	cpi	r24, 0x58	; 88
 63a:	79 f0       	breq	.+30     	; 0x65a <__LOCK_REGION_LENGTH__+0x25a>
 63c:	b5 c0       	rjmp	.+362    	; 0x7a8 <__LOCK_REGION_LENGTH__+0x3a8>
 63e:	80 37       	cpi	r24, 0x70	; 112
 640:	19 f0       	breq	.+6      	; 0x648 <__LOCK_REGION_LENGTH__+0x248>
 642:	88 37       	cpi	r24, 0x78	; 120
 644:	21 f0       	breq	.+8      	; 0x64e <__LOCK_REGION_LENGTH__+0x24e>
 646:	b0 c0       	rjmp	.+352    	; 0x7a8 <__LOCK_REGION_LENGTH__+0x3a8>
 648:	e9 2f       	mov	r30, r25
 64a:	e0 61       	ori	r30, 0x10	; 16
 64c:	be 2e       	mov	r11, r30
 64e:	b4 fe       	sbrs	r11, 4
 650:	0d c0       	rjmp	.+26     	; 0x66c <__LOCK_REGION_LENGTH__+0x26c>
 652:	fb 2d       	mov	r31, r11
 654:	f4 60       	ori	r31, 0x04	; 4
 656:	bf 2e       	mov	r11, r31
 658:	09 c0       	rjmp	.+18     	; 0x66c <__LOCK_REGION_LENGTH__+0x26c>
 65a:	34 fe       	sbrs	r3, 4
 65c:	0a c0       	rjmp	.+20     	; 0x672 <__LOCK_REGION_LENGTH__+0x272>
 65e:	29 2f       	mov	r18, r25
 660:	26 60       	ori	r18, 0x06	; 6
 662:	b2 2e       	mov	r11, r18
 664:	06 c0       	rjmp	.+12     	; 0x672 <__LOCK_REGION_LENGTH__+0x272>
 666:	28 e0       	ldi	r18, 0x08	; 8
 668:	30 e0       	ldi	r19, 0x00	; 0
 66a:	05 c0       	rjmp	.+10     	; 0x676 <__LOCK_REGION_LENGTH__+0x276>
 66c:	20 e1       	ldi	r18, 0x10	; 16
 66e:	30 e0       	ldi	r19, 0x00	; 0
 670:	02 c0       	rjmp	.+4      	; 0x676 <__LOCK_REGION_LENGTH__+0x276>
 672:	20 e1       	ldi	r18, 0x10	; 16
 674:	32 e0       	ldi	r19, 0x02	; 2
 676:	f8 01       	movw	r30, r16
 678:	b7 fe       	sbrs	r11, 7
 67a:	07 c0       	rjmp	.+14     	; 0x68a <__LOCK_REGION_LENGTH__+0x28a>
 67c:	60 81       	ld	r22, Z
 67e:	71 81       	ldd	r23, Z+1	; 0x01
 680:	82 81       	ldd	r24, Z+2	; 0x02
 682:	93 81       	ldd	r25, Z+3	; 0x03
 684:	0c 5f       	subi	r16, 0xFC	; 252
 686:	1f 4f       	sbci	r17, 0xFF	; 255
 688:	06 c0       	rjmp	.+12     	; 0x696 <__LOCK_REGION_LENGTH__+0x296>
 68a:	60 81       	ld	r22, Z
 68c:	71 81       	ldd	r23, Z+1	; 0x01
 68e:	80 e0       	ldi	r24, 0x00	; 0
 690:	90 e0       	ldi	r25, 0x00	; 0
 692:	0e 5f       	subi	r16, 0xFE	; 254
 694:	1f 4f       	sbci	r17, 0xFF	; 255
 696:	a3 01       	movw	r20, r6
 698:	0e 94 30 04 	call	0x860	; 0x860 <__ultoa_invert>
 69c:	88 2e       	mov	r8, r24
 69e:	86 18       	sub	r8, r6
 6a0:	fb 2d       	mov	r31, r11
 6a2:	ff 77       	andi	r31, 0x7F	; 127
 6a4:	3f 2e       	mov	r3, r31
 6a6:	36 fe       	sbrs	r3, 6
 6a8:	0d c0       	rjmp	.+26     	; 0x6c4 <__LOCK_REGION_LENGTH__+0x2c4>
 6aa:	23 2d       	mov	r18, r3
 6ac:	2e 7f       	andi	r18, 0xFE	; 254
 6ae:	a2 2e       	mov	r10, r18
 6b0:	89 14       	cp	r8, r9
 6b2:	58 f4       	brcc	.+22     	; 0x6ca <__LOCK_REGION_LENGTH__+0x2ca>
 6b4:	34 fe       	sbrs	r3, 4
 6b6:	0b c0       	rjmp	.+22     	; 0x6ce <__LOCK_REGION_LENGTH__+0x2ce>
 6b8:	32 fc       	sbrc	r3, 2
 6ba:	09 c0       	rjmp	.+18     	; 0x6ce <__LOCK_REGION_LENGTH__+0x2ce>
 6bc:	83 2d       	mov	r24, r3
 6be:	8e 7e       	andi	r24, 0xEE	; 238
 6c0:	a8 2e       	mov	r10, r24
 6c2:	05 c0       	rjmp	.+10     	; 0x6ce <__LOCK_REGION_LENGTH__+0x2ce>
 6c4:	b8 2c       	mov	r11, r8
 6c6:	a3 2c       	mov	r10, r3
 6c8:	03 c0       	rjmp	.+6      	; 0x6d0 <__LOCK_REGION_LENGTH__+0x2d0>
 6ca:	b8 2c       	mov	r11, r8
 6cc:	01 c0       	rjmp	.+2      	; 0x6d0 <__LOCK_REGION_LENGTH__+0x2d0>
 6ce:	b9 2c       	mov	r11, r9
 6d0:	a4 fe       	sbrs	r10, 4
 6d2:	0f c0       	rjmp	.+30     	; 0x6f2 <__LOCK_REGION_LENGTH__+0x2f2>
 6d4:	fe 01       	movw	r30, r28
 6d6:	e8 0d       	add	r30, r8
 6d8:	f1 1d       	adc	r31, r1
 6da:	80 81       	ld	r24, Z
 6dc:	80 33       	cpi	r24, 0x30	; 48
 6de:	21 f4       	brne	.+8      	; 0x6e8 <__LOCK_REGION_LENGTH__+0x2e8>
 6e0:	9a 2d       	mov	r25, r10
 6e2:	99 7e       	andi	r25, 0xE9	; 233
 6e4:	a9 2e       	mov	r10, r25
 6e6:	09 c0       	rjmp	.+18     	; 0x6fa <__LOCK_REGION_LENGTH__+0x2fa>
 6e8:	a2 fe       	sbrs	r10, 2
 6ea:	06 c0       	rjmp	.+12     	; 0x6f8 <__LOCK_REGION_LENGTH__+0x2f8>
 6ec:	b3 94       	inc	r11
 6ee:	b3 94       	inc	r11
 6f0:	04 c0       	rjmp	.+8      	; 0x6fa <__LOCK_REGION_LENGTH__+0x2fa>
 6f2:	8a 2d       	mov	r24, r10
 6f4:	86 78       	andi	r24, 0x86	; 134
 6f6:	09 f0       	breq	.+2      	; 0x6fa <__LOCK_REGION_LENGTH__+0x2fa>
 6f8:	b3 94       	inc	r11
 6fa:	a3 fc       	sbrc	r10, 3
 6fc:	11 c0       	rjmp	.+34     	; 0x720 <__LOCK_REGION_LENGTH__+0x320>
 6fe:	a0 fe       	sbrs	r10, 0
 700:	06 c0       	rjmp	.+12     	; 0x70e <__LOCK_REGION_LENGTH__+0x30e>
 702:	b2 14       	cp	r11, r2
 704:	88 f4       	brcc	.+34     	; 0x728 <__LOCK_REGION_LENGTH__+0x328>
 706:	28 0c       	add	r2, r8
 708:	92 2c       	mov	r9, r2
 70a:	9b 18       	sub	r9, r11
 70c:	0e c0       	rjmp	.+28     	; 0x72a <__LOCK_REGION_LENGTH__+0x32a>
 70e:	b2 14       	cp	r11, r2
 710:	60 f4       	brcc	.+24     	; 0x72a <__LOCK_REGION_LENGTH__+0x32a>
 712:	b6 01       	movw	r22, r12
 714:	80 e2       	ldi	r24, 0x20	; 32
 716:	90 e0       	ldi	r25, 0x00	; 0
 718:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <fputc>
 71c:	b3 94       	inc	r11
 71e:	f7 cf       	rjmp	.-18     	; 0x70e <__LOCK_REGION_LENGTH__+0x30e>
 720:	b2 14       	cp	r11, r2
 722:	18 f4       	brcc	.+6      	; 0x72a <__LOCK_REGION_LENGTH__+0x32a>
 724:	2b 18       	sub	r2, r11
 726:	02 c0       	rjmp	.+4      	; 0x72c <__LOCK_REGION_LENGTH__+0x32c>
 728:	98 2c       	mov	r9, r8
 72a:	21 2c       	mov	r2, r1
 72c:	a4 fe       	sbrs	r10, 4
 72e:	10 c0       	rjmp	.+32     	; 0x750 <__LOCK_REGION_LENGTH__+0x350>
 730:	b6 01       	movw	r22, r12
 732:	80 e3       	ldi	r24, 0x30	; 48
 734:	90 e0       	ldi	r25, 0x00	; 0
 736:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <fputc>
 73a:	a2 fe       	sbrs	r10, 2
 73c:	17 c0       	rjmp	.+46     	; 0x76c <__LOCK_REGION_LENGTH__+0x36c>
 73e:	a1 fc       	sbrc	r10, 1
 740:	03 c0       	rjmp	.+6      	; 0x748 <__LOCK_REGION_LENGTH__+0x348>
 742:	88 e7       	ldi	r24, 0x78	; 120
 744:	90 e0       	ldi	r25, 0x00	; 0
 746:	02 c0       	rjmp	.+4      	; 0x74c <__LOCK_REGION_LENGTH__+0x34c>
 748:	88 e5       	ldi	r24, 0x58	; 88
 74a:	90 e0       	ldi	r25, 0x00	; 0
 74c:	b6 01       	movw	r22, r12
 74e:	0c c0       	rjmp	.+24     	; 0x768 <__LOCK_REGION_LENGTH__+0x368>
 750:	8a 2d       	mov	r24, r10
 752:	86 78       	andi	r24, 0x86	; 134
 754:	59 f0       	breq	.+22     	; 0x76c <__LOCK_REGION_LENGTH__+0x36c>
 756:	a1 fe       	sbrs	r10, 1
 758:	02 c0       	rjmp	.+4      	; 0x75e <__LOCK_REGION_LENGTH__+0x35e>
 75a:	8b e2       	ldi	r24, 0x2B	; 43
 75c:	01 c0       	rjmp	.+2      	; 0x760 <__LOCK_REGION_LENGTH__+0x360>
 75e:	80 e2       	ldi	r24, 0x20	; 32
 760:	a7 fc       	sbrc	r10, 7
 762:	8d e2       	ldi	r24, 0x2D	; 45
 764:	b6 01       	movw	r22, r12
 766:	90 e0       	ldi	r25, 0x00	; 0
 768:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <fputc>
 76c:	89 14       	cp	r8, r9
 76e:	38 f4       	brcc	.+14     	; 0x77e <__LOCK_REGION_LENGTH__+0x37e>
 770:	b6 01       	movw	r22, r12
 772:	80 e3       	ldi	r24, 0x30	; 48
 774:	90 e0       	ldi	r25, 0x00	; 0
 776:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <fputc>
 77a:	9a 94       	dec	r9
 77c:	f7 cf       	rjmp	.-18     	; 0x76c <__LOCK_REGION_LENGTH__+0x36c>
 77e:	8a 94       	dec	r8
 780:	f3 01       	movw	r30, r6
 782:	e8 0d       	add	r30, r8
 784:	f1 1d       	adc	r31, r1
 786:	80 81       	ld	r24, Z
 788:	b6 01       	movw	r22, r12
 78a:	90 e0       	ldi	r25, 0x00	; 0
 78c:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <fputc>
 790:	81 10       	cpse	r8, r1
 792:	f5 cf       	rjmp	.-22     	; 0x77e <__LOCK_REGION_LENGTH__+0x37e>
 794:	22 20       	and	r2, r2
 796:	09 f4       	brne	.+2      	; 0x79a <__LOCK_REGION_LENGTH__+0x39a>
 798:	42 ce       	rjmp	.-892    	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 79a:	b6 01       	movw	r22, r12
 79c:	80 e2       	ldi	r24, 0x20	; 32
 79e:	90 e0       	ldi	r25, 0x00	; 0
 7a0:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <fputc>
 7a4:	2a 94       	dec	r2
 7a6:	f6 cf       	rjmp	.-20     	; 0x794 <__LOCK_REGION_LENGTH__+0x394>
 7a8:	f6 01       	movw	r30, r12
 7aa:	86 81       	ldd	r24, Z+6	; 0x06
 7ac:	97 81       	ldd	r25, Z+7	; 0x07
 7ae:	02 c0       	rjmp	.+4      	; 0x7b4 <__LOCK_REGION_LENGTH__+0x3b4>
 7b0:	8f ef       	ldi	r24, 0xFF	; 255
 7b2:	9f ef       	ldi	r25, 0xFF	; 255
 7b4:	2b 96       	adiw	r28, 0x0b	; 11
 7b6:	e2 e1       	ldi	r30, 0x12	; 18
 7b8:	0c 94 aa 04 	jmp	0x954	; 0x954 <__epilogue_restores__>

000007bc <strnlen_P>:
 7bc:	fc 01       	movw	r30, r24
 7be:	05 90       	lpm	r0, Z+
 7c0:	61 50       	subi	r22, 0x01	; 1
 7c2:	70 40       	sbci	r23, 0x00	; 0
 7c4:	01 10       	cpse	r0, r1
 7c6:	d8 f7       	brcc	.-10     	; 0x7be <strnlen_P+0x2>
 7c8:	80 95       	com	r24
 7ca:	90 95       	com	r25
 7cc:	8e 0f       	add	r24, r30
 7ce:	9f 1f       	adc	r25, r31
 7d0:	08 95       	ret

000007d2 <strnlen>:
 7d2:	fc 01       	movw	r30, r24
 7d4:	61 50       	subi	r22, 0x01	; 1
 7d6:	70 40       	sbci	r23, 0x00	; 0
 7d8:	01 90       	ld	r0, Z+
 7da:	01 10       	cpse	r0, r1
 7dc:	d8 f7       	brcc	.-10     	; 0x7d4 <strnlen+0x2>
 7de:	80 95       	com	r24
 7e0:	90 95       	com	r25
 7e2:	8e 0f       	add	r24, r30
 7e4:	9f 1f       	adc	r25, r31
 7e6:	08 95       	ret

000007e8 <fputc>:
 7e8:	0f 93       	push	r16
 7ea:	1f 93       	push	r17
 7ec:	cf 93       	push	r28
 7ee:	df 93       	push	r29
 7f0:	fb 01       	movw	r30, r22
 7f2:	23 81       	ldd	r18, Z+3	; 0x03
 7f4:	21 fd       	sbrc	r18, 1
 7f6:	03 c0       	rjmp	.+6      	; 0x7fe <fputc+0x16>
 7f8:	8f ef       	ldi	r24, 0xFF	; 255
 7fa:	9f ef       	ldi	r25, 0xFF	; 255
 7fc:	2c c0       	rjmp	.+88     	; 0x856 <fputc+0x6e>
 7fe:	22 ff       	sbrs	r18, 2
 800:	16 c0       	rjmp	.+44     	; 0x82e <fputc+0x46>
 802:	46 81       	ldd	r20, Z+6	; 0x06
 804:	57 81       	ldd	r21, Z+7	; 0x07
 806:	24 81       	ldd	r18, Z+4	; 0x04
 808:	35 81       	ldd	r19, Z+5	; 0x05
 80a:	42 17       	cp	r20, r18
 80c:	53 07       	cpc	r21, r19
 80e:	44 f4       	brge	.+16     	; 0x820 <fputc+0x38>
 810:	a0 81       	ld	r26, Z
 812:	b1 81       	ldd	r27, Z+1	; 0x01
 814:	9d 01       	movw	r18, r26
 816:	2f 5f       	subi	r18, 0xFF	; 255
 818:	3f 4f       	sbci	r19, 0xFF	; 255
 81a:	31 83       	std	Z+1, r19	; 0x01
 81c:	20 83       	st	Z, r18
 81e:	8c 93       	st	X, r24
 820:	26 81       	ldd	r18, Z+6	; 0x06
 822:	37 81       	ldd	r19, Z+7	; 0x07
 824:	2f 5f       	subi	r18, 0xFF	; 255
 826:	3f 4f       	sbci	r19, 0xFF	; 255
 828:	37 83       	std	Z+7, r19	; 0x07
 82a:	26 83       	std	Z+6, r18	; 0x06
 82c:	14 c0       	rjmp	.+40     	; 0x856 <fputc+0x6e>
 82e:	8b 01       	movw	r16, r22
 830:	ec 01       	movw	r28, r24
 832:	fb 01       	movw	r30, r22
 834:	00 84       	ldd	r0, Z+8	; 0x08
 836:	f1 85       	ldd	r31, Z+9	; 0x09
 838:	e0 2d       	mov	r30, r0
 83a:	09 95       	icall
 83c:	89 2b       	or	r24, r25
 83e:	e1 f6       	brne	.-72     	; 0x7f8 <fputc+0x10>
 840:	d8 01       	movw	r26, r16
 842:	16 96       	adiw	r26, 0x06	; 6
 844:	8d 91       	ld	r24, X+
 846:	9c 91       	ld	r25, X
 848:	17 97       	sbiw	r26, 0x07	; 7
 84a:	01 96       	adiw	r24, 0x01	; 1
 84c:	17 96       	adiw	r26, 0x07	; 7
 84e:	9c 93       	st	X, r25
 850:	8e 93       	st	-X, r24
 852:	16 97       	sbiw	r26, 0x06	; 6
 854:	ce 01       	movw	r24, r28
 856:	df 91       	pop	r29
 858:	cf 91       	pop	r28
 85a:	1f 91       	pop	r17
 85c:	0f 91       	pop	r16
 85e:	08 95       	ret

00000860 <__ultoa_invert>:
 860:	fa 01       	movw	r30, r20
 862:	aa 27       	eor	r26, r26
 864:	28 30       	cpi	r18, 0x08	; 8
 866:	51 f1       	breq	.+84     	; 0x8bc <__ultoa_invert+0x5c>
 868:	20 31       	cpi	r18, 0x10	; 16
 86a:	81 f1       	breq	.+96     	; 0x8cc <__ultoa_invert+0x6c>
 86c:	e8 94       	clt
 86e:	6f 93       	push	r22
 870:	6e 7f       	andi	r22, 0xFE	; 254
 872:	6e 5f       	subi	r22, 0xFE	; 254
 874:	7f 4f       	sbci	r23, 0xFF	; 255
 876:	8f 4f       	sbci	r24, 0xFF	; 255
 878:	9f 4f       	sbci	r25, 0xFF	; 255
 87a:	af 4f       	sbci	r26, 0xFF	; 255
 87c:	b1 e0       	ldi	r27, 0x01	; 1
 87e:	3e d0       	rcall	.+124    	; 0x8fc <__ultoa_invert+0x9c>
 880:	b4 e0       	ldi	r27, 0x04	; 4
 882:	3c d0       	rcall	.+120    	; 0x8fc <__ultoa_invert+0x9c>
 884:	67 0f       	add	r22, r23
 886:	78 1f       	adc	r23, r24
 888:	89 1f       	adc	r24, r25
 88a:	9a 1f       	adc	r25, r26
 88c:	a1 1d       	adc	r26, r1
 88e:	68 0f       	add	r22, r24
 890:	79 1f       	adc	r23, r25
 892:	8a 1f       	adc	r24, r26
 894:	91 1d       	adc	r25, r1
 896:	a1 1d       	adc	r26, r1
 898:	6a 0f       	add	r22, r26
 89a:	71 1d       	adc	r23, r1
 89c:	81 1d       	adc	r24, r1
 89e:	91 1d       	adc	r25, r1
 8a0:	a1 1d       	adc	r26, r1
 8a2:	20 d0       	rcall	.+64     	; 0x8e4 <__ultoa_invert+0x84>
 8a4:	09 f4       	brne	.+2      	; 0x8a8 <__ultoa_invert+0x48>
 8a6:	68 94       	set
 8a8:	3f 91       	pop	r19
 8aa:	2a e0       	ldi	r18, 0x0A	; 10
 8ac:	26 9f       	mul	r18, r22
 8ae:	11 24       	eor	r1, r1
 8b0:	30 19       	sub	r19, r0
 8b2:	30 5d       	subi	r19, 0xD0	; 208
 8b4:	31 93       	st	Z+, r19
 8b6:	de f6       	brtc	.-74     	; 0x86e <__ultoa_invert+0xe>
 8b8:	cf 01       	movw	r24, r30
 8ba:	08 95       	ret
 8bc:	46 2f       	mov	r20, r22
 8be:	47 70       	andi	r20, 0x07	; 7
 8c0:	40 5d       	subi	r20, 0xD0	; 208
 8c2:	41 93       	st	Z+, r20
 8c4:	b3 e0       	ldi	r27, 0x03	; 3
 8c6:	0f d0       	rcall	.+30     	; 0x8e6 <__ultoa_invert+0x86>
 8c8:	c9 f7       	brne	.-14     	; 0x8bc <__ultoa_invert+0x5c>
 8ca:	f6 cf       	rjmp	.-20     	; 0x8b8 <__ultoa_invert+0x58>
 8cc:	46 2f       	mov	r20, r22
 8ce:	4f 70       	andi	r20, 0x0F	; 15
 8d0:	40 5d       	subi	r20, 0xD0	; 208
 8d2:	4a 33       	cpi	r20, 0x3A	; 58
 8d4:	18 f0       	brcs	.+6      	; 0x8dc <__ultoa_invert+0x7c>
 8d6:	49 5d       	subi	r20, 0xD9	; 217
 8d8:	31 fd       	sbrc	r19, 1
 8da:	40 52       	subi	r20, 0x20	; 32
 8dc:	41 93       	st	Z+, r20
 8de:	02 d0       	rcall	.+4      	; 0x8e4 <__ultoa_invert+0x84>
 8e0:	a9 f7       	brne	.-22     	; 0x8cc <__ultoa_invert+0x6c>
 8e2:	ea cf       	rjmp	.-44     	; 0x8b8 <__ultoa_invert+0x58>
 8e4:	b4 e0       	ldi	r27, 0x04	; 4
 8e6:	a6 95       	lsr	r26
 8e8:	97 95       	ror	r25
 8ea:	87 95       	ror	r24
 8ec:	77 95       	ror	r23
 8ee:	67 95       	ror	r22
 8f0:	ba 95       	dec	r27
 8f2:	c9 f7       	brne	.-14     	; 0x8e6 <__ultoa_invert+0x86>
 8f4:	00 97       	sbiw	r24, 0x00	; 0
 8f6:	61 05       	cpc	r22, r1
 8f8:	71 05       	cpc	r23, r1
 8fa:	08 95       	ret
 8fc:	9b 01       	movw	r18, r22
 8fe:	ac 01       	movw	r20, r24
 900:	0a 2e       	mov	r0, r26
 902:	06 94       	lsr	r0
 904:	57 95       	ror	r21
 906:	47 95       	ror	r20
 908:	37 95       	ror	r19
 90a:	27 95       	ror	r18
 90c:	ba 95       	dec	r27
 90e:	c9 f7       	brne	.-14     	; 0x902 <__stack+0x3>
 910:	62 0f       	add	r22, r18
 912:	73 1f       	adc	r23, r19
 914:	84 1f       	adc	r24, r20
 916:	95 1f       	adc	r25, r21
 918:	a0 1d       	adc	r26, r0
 91a:	08 95       	ret

0000091c <__prologue_saves__>:
 91c:	2f 92       	push	r2
 91e:	3f 92       	push	r3
 920:	4f 92       	push	r4
 922:	5f 92       	push	r5
 924:	6f 92       	push	r6
 926:	7f 92       	push	r7
 928:	8f 92       	push	r8
 92a:	9f 92       	push	r9
 92c:	af 92       	push	r10
 92e:	bf 92       	push	r11
 930:	cf 92       	push	r12
 932:	df 92       	push	r13
 934:	ef 92       	push	r14
 936:	ff 92       	push	r15
 938:	0f 93       	push	r16
 93a:	1f 93       	push	r17
 93c:	cf 93       	push	r28
 93e:	df 93       	push	r29
 940:	cd b7       	in	r28, 0x3d	; 61
 942:	de b7       	in	r29, 0x3e	; 62
 944:	ca 1b       	sub	r28, r26
 946:	db 0b       	sbc	r29, r27
 948:	0f b6       	in	r0, 0x3f	; 63
 94a:	f8 94       	cli
 94c:	de bf       	out	0x3e, r29	; 62
 94e:	0f be       	out	0x3f, r0	; 63
 950:	cd bf       	out	0x3d, r28	; 61
 952:	09 94       	ijmp

00000954 <__epilogue_restores__>:
 954:	2a 88       	ldd	r2, Y+18	; 0x12
 956:	39 88       	ldd	r3, Y+17	; 0x11
 958:	48 88       	ldd	r4, Y+16	; 0x10
 95a:	5f 84       	ldd	r5, Y+15	; 0x0f
 95c:	6e 84       	ldd	r6, Y+14	; 0x0e
 95e:	7d 84       	ldd	r7, Y+13	; 0x0d
 960:	8c 84       	ldd	r8, Y+12	; 0x0c
 962:	9b 84       	ldd	r9, Y+11	; 0x0b
 964:	aa 84       	ldd	r10, Y+10	; 0x0a
 966:	b9 84       	ldd	r11, Y+9	; 0x09
 968:	c8 84       	ldd	r12, Y+8	; 0x08
 96a:	df 80       	ldd	r13, Y+7	; 0x07
 96c:	ee 80       	ldd	r14, Y+6	; 0x06
 96e:	fd 80       	ldd	r15, Y+5	; 0x05
 970:	0c 81       	ldd	r16, Y+4	; 0x04
 972:	1b 81       	ldd	r17, Y+3	; 0x03
 974:	aa 81       	ldd	r26, Y+2	; 0x02
 976:	b9 81       	ldd	r27, Y+1	; 0x01
 978:	ce 0f       	add	r28, r30
 97a:	d1 1d       	adc	r29, r1
 97c:	0f b6       	in	r0, 0x3f	; 63
 97e:	f8 94       	cli
 980:	de bf       	out	0x3e, r29	; 62
 982:	0f be       	out	0x3f, r0	; 63
 984:	cd bf       	out	0x3d, r28	; 61
 986:	ed 01       	movw	r28, r26
 988:	08 95       	ret

0000098a <_exit>:
 98a:	f8 94       	cli

0000098c <__stop_program>:
 98c:	ff cf       	rjmp	.-2      	; 0x98c <__stop_program>
