
Gait Control Treadmill.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  000009e2  00000a76  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000009e2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000009c  00800104  00800104  00000a7a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000a7a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000ad8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  00000b18  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000ebf  00000000  00000000  00000ba0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000bc8  00000000  00000000  00001a5f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000653  00000000  00000000  00002627  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000184  00000000  00000000  00002c7c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005c0  00000000  00000000  00002e00  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000003d9  00000000  00000000  000033c0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000068  00000000  00000000  00003799  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__ctors_end>
   4:	0c 94 b1 00 	jmp	0x162	; 0x162 <__vector_1>
   8:	0c 94 ee 00 	jmp	0x1dc	; 0x1dc <__vector_2>
   c:	0c 94 2b 01 	jmp	0x256	; 0x256 <__vector_3>
  10:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  14:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  18:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  1c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  20:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  24:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  28:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  2c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  30:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  34:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  38:	0c 94 9b 00 	jmp	0x136	; 0x136 <__vector_14>
  3c:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__vector_15>
  40:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  44:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  48:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  4c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  50:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  54:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  58:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  5c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  60:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  64:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  68:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  6c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  70:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  74:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  78:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  7c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  80:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  84:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  88:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  8c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  90:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  94:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  98:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  9c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a4:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  ac:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  b0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d8 e0       	ldi	r29, 0x08	; 8
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61

000000c0 <__do_copy_data>:
  c0:	11 e0       	ldi	r17, 0x01	; 1
  c2:	a0 e0       	ldi	r26, 0x00	; 0
  c4:	b1 e0       	ldi	r27, 0x01	; 1
  c6:	e2 ee       	ldi	r30, 0xE2	; 226
  c8:	f9 e0       	ldi	r31, 0x09	; 9
  ca:	02 c0       	rjmp	.+4      	; 0xd0 <__do_copy_data+0x10>
  cc:	05 90       	lpm	r0, Z+
  ce:	0d 92       	st	X+, r0
  d0:	a4 30       	cpi	r26, 0x04	; 4
  d2:	b1 07       	cpc	r27, r17
  d4:	d9 f7       	brne	.-10     	; 0xcc <__do_copy_data+0xc>

000000d6 <__do_clear_bss>:
  d6:	21 e0       	ldi	r18, 0x01	; 1
  d8:	a4 e0       	ldi	r26, 0x04	; 4
  da:	b1 e0       	ldi	r27, 0x01	; 1
  dc:	01 c0       	rjmp	.+2      	; 0xe0 <.do_clear_bss_start>

000000de <.do_clear_bss_loop>:
  de:	1d 92       	st	X+, r1

000000e0 <.do_clear_bss_start>:
  e0:	a0 3a       	cpi	r26, 0xA0	; 160
  e2:	b2 07       	cpc	r27, r18
  e4:	e1 f7       	brne	.-8      	; 0xde <.do_clear_bss_loop>
  e6:	0e 94 68 01 	call	0x2d0	; 0x2d0 <main>
  ea:	0c 94 ef 04 	jmp	0x9de	; 0x9de <_exit>

000000ee <__bad_interrupt>:
  ee:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000f2 <USART_Init>:
unsigned char USART_Receive(){
	/* Wait for data to be received */
	while (!(UCSR0A & (1<<RXC0)));
	/* Get and return received data from buffer */
	return UDR0;
}
  f2:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
  f6:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
  fa:	88 e1       	ldi	r24, 0x18	; 24
  fc:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 100:	86 e0       	ldi	r24, 0x06	; 6
 102:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
 106:	08 95       	ret

00000108 <USART_Transmit>:
void USART_Transmit(unsigned char data){
	/* Wait for empty transmit buffer */
	while (!(UCSR0A & (1<<UDRE0)));
 108:	e0 ec       	ldi	r30, 0xC0	; 192
 10a:	f0 e0       	ldi	r31, 0x00	; 0
 10c:	90 81       	ld	r25, Z
 10e:	95 ff       	sbrs	r25, 5
 110:	fd cf       	rjmp	.-6      	; 0x10c <USART_Transmit+0x4>
	/* Put data into buffer, sends the data */
	UDR0 = data;
 112:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 116:	08 95       	ret

00000118 <USART_putstring>:
}
void USART_putstring(char* strptr){
 118:	cf 93       	push	r28
 11a:	df 93       	push	r29
 11c:	ec 01       	movw	r28, r24
	while (*strptr != 0x00){
 11e:	88 81       	ld	r24, Y
 120:	88 23       	and	r24, r24
 122:	31 f0       	breq	.+12     	; 0x130 <USART_putstring+0x18>
 124:	21 96       	adiw	r28, 0x01	; 1
		USART_Transmit(*strptr);
 126:	0e 94 84 00 	call	0x108	; 0x108 <USART_Transmit>
	while (!(UCSR0A & (1<<UDRE0)));
	/* Put data into buffer, sends the data */
	UDR0 = data;
}
void USART_putstring(char* strptr){
	while (*strptr != 0x00){
 12a:	89 91       	ld	r24, Y+
 12c:	81 11       	cpse	r24, r1
 12e:	fb cf       	rjmp	.-10     	; 0x126 <USART_putstring+0xe>
		USART_Transmit(*strptr);
		strptr++;
	}
}
 130:	df 91       	pop	r29
 132:	cf 91       	pop	r28
 134:	08 95       	ret

00000136 <__vector_14>:
#ifndef INTERRUPT_H_
#define INTERRUPT_H_

#include "Sensor.h"

ISR(TIMER0_COMPA_vect){
 136:	1f 92       	push	r1
 138:	0f 92       	push	r0
 13a:	0f b6       	in	r0, 0x3f	; 63
 13c:	0f 92       	push	r0
 13e:	11 24       	eor	r1, r1
	LED_ON;
 140:	2d 9a       	sbi	0x05, 5	; 5
}
 142:	0f 90       	pop	r0
 144:	0f be       	out	0x3f, r0	; 63
 146:	0f 90       	pop	r0
 148:	1f 90       	pop	r1
 14a:	18 95       	reti

0000014c <__vector_15>:
ISR(TIMER0_COMPB_vect){
 14c:	1f 92       	push	r1
 14e:	0f 92       	push	r0
 150:	0f b6       	in	r0, 0x3f	; 63
 152:	0f 92       	push	r0
 154:	11 24       	eor	r1, r1
	LED_OFF;
 156:	2d 98       	cbi	0x05, 5	; 5
}
 158:	0f 90       	pop	r0
 15a:	0f be       	out	0x3f, r0	; 63
 15c:	0f 90       	pop	r0
 15e:	1f 90       	pop	r1
 160:	18 95       	reti

00000162 <__vector_1>:

ISR(INT0_vect){
 162:	1f 92       	push	r1
 164:	0f 92       	push	r0
 166:	0f b6       	in	r0, 0x3f	; 63
 168:	0f 92       	push	r0
 16a:	11 24       	eor	r1, r1
 16c:	8f 93       	push	r24
 16e:	9f 93       	push	r25
 170:	af 93       	push	r26
 172:	bf 93       	push	r27
 174:	ef 93       	push	r30
 176:	ff 93       	push	r31
	if (sensors[0].flag == 1){
 178:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <__data_end+0x2>
 17c:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <__data_end+0x3>
 180:	01 97       	sbiw	r24, 0x01	; 1
 182:	81 f4       	brne	.+32     	; 0x1a4 <__vector_1+0x42>
		TCCR1B = 0;
 184:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
		sensors[0].pulse = TCNT1;
 188:	a4 e8       	ldi	r26, 0x84	; 132
 18a:	b0 e0       	ldi	r27, 0x00	; 0
 18c:	8d 91       	ld	r24, X+
 18e:	9c 91       	ld	r25, X
 190:	11 97       	sbiw	r26, 0x01	; 1
 192:	e4 e0       	ldi	r30, 0x04	; 4
 194:	f1 e0       	ldi	r31, 0x01	; 1
 196:	91 83       	std	Z+1, r25	; 0x01
 198:	80 83       	st	Z, r24
		TCNT1 = 0;
 19a:	11 96       	adiw	r26, 0x01	; 1
 19c:	1c 92       	st	X, r1
 19e:	1e 92       	st	-X, r1
		sensors[0].flag = 0;
 1a0:	13 82       	std	Z+3, r1	; 0x03
 1a2:	12 82       	std	Z+2, r1	; 0x02
	}
	if (sensors[0].flag == 0){
 1a4:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <__data_end+0x2>
 1a8:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <__data_end+0x3>
 1ac:	89 2b       	or	r24, r25
 1ae:	59 f4       	brne	.+22     	; 0x1c6 <__vector_1+0x64>
		TCCR1B |= (1<<CS10);
 1b0:	e1 e8       	ldi	r30, 0x81	; 129
 1b2:	f0 e0       	ldi	r31, 0x00	; 0
 1b4:	80 81       	ld	r24, Z
 1b6:	81 60       	ori	r24, 0x01	; 1
 1b8:	80 83       	st	Z, r24
		sensors[0].flag = 1;
 1ba:	81 e0       	ldi	r24, 0x01	; 1
 1bc:	90 e0       	ldi	r25, 0x00	; 0
 1be:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <__data_end+0x3>
 1c2:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <__data_end+0x2>
	}
}
 1c6:	ff 91       	pop	r31
 1c8:	ef 91       	pop	r30
 1ca:	bf 91       	pop	r27
 1cc:	af 91       	pop	r26
 1ce:	9f 91       	pop	r25
 1d0:	8f 91       	pop	r24
 1d2:	0f 90       	pop	r0
 1d4:	0f be       	out	0x3f, r0	; 63
 1d6:	0f 90       	pop	r0
 1d8:	1f 90       	pop	r1
 1da:	18 95       	reti

000001dc <__vector_2>:

ISR(INT1_vect){
 1dc:	1f 92       	push	r1
 1de:	0f 92       	push	r0
 1e0:	0f b6       	in	r0, 0x3f	; 63
 1e2:	0f 92       	push	r0
 1e4:	11 24       	eor	r1, r1
 1e6:	8f 93       	push	r24
 1e8:	9f 93       	push	r25
 1ea:	af 93       	push	r26
 1ec:	bf 93       	push	r27
 1ee:	ef 93       	push	r30
 1f0:	ff 93       	push	r31
	if (sensors[1].flag == 1){
 1f2:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__data_end+0x1c>
 1f6:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <__data_end+0x1d>
 1fa:	01 97       	sbiw	r24, 0x01	; 1
 1fc:	81 f4       	brne	.+32     	; 0x21e <__vector_2+0x42>
		TCCR3B = 0;
 1fe:	10 92 91 00 	sts	0x0091, r1	; 0x800091 <__TEXT_REGION_LENGTH__+0x7e0091>
		sensors[1].pulse = TCNT3;
 202:	a4 e9       	ldi	r26, 0x94	; 148
 204:	b0 e0       	ldi	r27, 0x00	; 0
 206:	8d 91       	ld	r24, X+
 208:	9c 91       	ld	r25, X
 20a:	11 97       	sbiw	r26, 0x01	; 1
 20c:	e4 e0       	ldi	r30, 0x04	; 4
 20e:	f1 e0       	ldi	r31, 0x01	; 1
 210:	93 8f       	std	Z+27, r25	; 0x1b
 212:	82 8f       	std	Z+26, r24	; 0x1a
		TCNT3 = 0;
 214:	11 96       	adiw	r26, 0x01	; 1
 216:	1c 92       	st	X, r1
 218:	1e 92       	st	-X, r1
		sensors[1].flag = 0;
 21a:	15 8e       	std	Z+29, r1	; 0x1d
 21c:	14 8e       	std	Z+28, r1	; 0x1c
	}
	if (sensors[1].flag == 0){
 21e:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__data_end+0x1c>
 222:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <__data_end+0x1d>
 226:	89 2b       	or	r24, r25
 228:	59 f4       	brne	.+22     	; 0x240 <__vector_2+0x64>
		TCCR3B |= (1<<CS10);
 22a:	e1 e9       	ldi	r30, 0x91	; 145
 22c:	f0 e0       	ldi	r31, 0x00	; 0
 22e:	80 81       	ld	r24, Z
 230:	81 60       	ori	r24, 0x01	; 1
 232:	80 83       	st	Z, r24
		sensors[1].flag = 1;
 234:	81 e0       	ldi	r24, 0x01	; 1
 236:	90 e0       	ldi	r25, 0x00	; 0
 238:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <__data_end+0x1d>
 23c:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <__data_end+0x1c>
	}
}
 240:	ff 91       	pop	r31
 242:	ef 91       	pop	r30
 244:	bf 91       	pop	r27
 246:	af 91       	pop	r26
 248:	9f 91       	pop	r25
 24a:	8f 91       	pop	r24
 24c:	0f 90       	pop	r0
 24e:	0f be       	out	0x3f, r0	; 63
 250:	0f 90       	pop	r0
 252:	1f 90       	pop	r1
 254:	18 95       	reti

00000256 <__vector_3>:
ISR(PCINT0_vect){
 256:	1f 92       	push	r1
 258:	0f 92       	push	r0
 25a:	0f b6       	in	r0, 0x3f	; 63
 25c:	0f 92       	push	r0
 25e:	11 24       	eor	r1, r1
 260:	8f 93       	push	r24
 262:	9f 93       	push	r25
 264:	af 93       	push	r26
 266:	bf 93       	push	r27
 268:	ef 93       	push	r30
 26a:	ff 93       	push	r31
	if (sensors[2].flag == 1){
 26c:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <__data_end+0x36>
 270:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <__data_end+0x37>
 274:	01 97       	sbiw	r24, 0x01	; 1
 276:	81 f4       	brne	.+32     	; 0x298 <__vector_3+0x42>
		TCCR4B = 0;
 278:	10 92 a1 00 	sts	0x00A1, r1	; 0x8000a1 <__TEXT_REGION_LENGTH__+0x7e00a1>
		sensors[2].pulse = TCNT4;
 27c:	a4 ea       	ldi	r26, 0xA4	; 164
 27e:	b0 e0       	ldi	r27, 0x00	; 0
 280:	8d 91       	ld	r24, X+
 282:	9c 91       	ld	r25, X
 284:	11 97       	sbiw	r26, 0x01	; 1
 286:	e4 e0       	ldi	r30, 0x04	; 4
 288:	f1 e0       	ldi	r31, 0x01	; 1
 28a:	95 ab       	std	Z+53, r25	; 0x35
 28c:	84 ab       	std	Z+52, r24	; 0x34
		TCNT4 = 0;
 28e:	11 96       	adiw	r26, 0x01	; 1
 290:	1c 92       	st	X, r1
 292:	1e 92       	st	-X, r1
		sensors[2].flag = 0;
 294:	17 aa       	std	Z+55, r1	; 0x37
 296:	16 aa       	std	Z+54, r1	; 0x36
	}
	if (sensors[2].flag == 0){
 298:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <__data_end+0x36>
 29c:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <__data_end+0x37>
 2a0:	89 2b       	or	r24, r25
 2a2:	59 f4       	brne	.+22     	; 0x2ba <__vector_3+0x64>
		TCCR4B |= (1<<CS10);
 2a4:	e1 ea       	ldi	r30, 0xA1	; 161
 2a6:	f0 e0       	ldi	r31, 0x00	; 0
 2a8:	80 81       	ld	r24, Z
 2aa:	81 60       	ori	r24, 0x01	; 1
 2ac:	80 83       	st	Z, r24
		sensors[2].flag = 1;
 2ae:	81 e0       	ldi	r24, 0x01	; 1
 2b0:	90 e0       	ldi	r25, 0x00	; 0
 2b2:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <__data_end+0x37>
 2b6:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <__data_end+0x36>
	}
}
 2ba:	ff 91       	pop	r31
 2bc:	ef 91       	pop	r30
 2be:	bf 91       	pop	r27
 2c0:	af 91       	pop	r26
 2c2:	9f 91       	pop	r25
 2c4:	8f 91       	pop	r24
 2c6:	0f 90       	pop	r0
 2c8:	0f be       	out	0x3f, r0	; 63
 2ca:	0f 90       	pop	r0
 2cc:	1f 90       	pop	r1
 2ce:	18 95       	reti

000002d0 <main>:
#define BAUD				9600
#define MYUBBR				F_CPU/16/BAUD-1



int main(){
 2d0:	cf 93       	push	r28
 2d2:	df 93       	push	r29
 2d4:	cd b7       	in	r28, 0x3d	; 61
 2d6:	de b7       	in	r29, 0x3e	; 62
 2d8:	28 97       	sbiw	r28, 0x08	; 8
 2da:	0f b6       	in	r0, 0x3f	; 63
 2dc:	f8 94       	cli
 2de:	de bf       	out	0x3e, r29	; 62
 2e0:	0f be       	out	0x3f, r0	; 63
 2e2:	cd bf       	out	0x3d, r28	; 61
	Sensor_Init();
 2e4:	0e 94 bf 01 	call	0x37e	; 0x37e <Sensor_Init>
	USART_Init(MYUBBR);
 2e8:	87 e6       	ldi	r24, 0x67	; 103
 2ea:	90 e0       	ldi	r25, 0x00	; 0
 2ec:	0e 94 79 00 	call	0xf2	; 0xf2 <USART_Init>
	
	char s2[] = "hello";

    //PWM_Init_8();
	sei();
 2f0:	78 94       	sei
	char space[] = "  ";
 2f2:	80 e2       	ldi	r24, 0x20	; 32
 2f4:	90 e2       	ldi	r25, 0x20	; 32
 2f6:	9a 83       	std	Y+2, r25	; 0x02
 2f8:	89 83       	std	Y+1, r24	; 0x01
 2fa:	1b 82       	std	Y+3, r1	; 0x03
		// Trig Signal
		PORTB |= (1<<PINB3); 
		_delay_us(15); 
		PORTB &= ~(1<<PINB3);
		
		cur = sensors[0].pulse / 58;
 2fc:	0f 2e       	mov	r0, r31
 2fe:	f4 e0       	ldi	r31, 0x04	; 4
 300:	ef 2e       	mov	r14, r31
 302:	f1 e0       	ldi	r31, 0x01	; 1
 304:	ff 2e       	mov	r15, r31
 306:	f0 2d       	mov	r31, r0
 308:	0a e3       	ldi	r16, 0x3A	; 58
 30a:	10 e0       	ldi	r17, 0x00	; 0
		if (cur <= 2 || cur >= 400) continue;
		sprintf(s, "%d", cur);
 30c:	0f 2e       	mov	r0, r31
 30e:	f0 e0       	ldi	r31, 0x00	; 0
 310:	af 2e       	mov	r10, r31
 312:	f1 e0       	ldi	r31, 0x01	; 1
 314:	bf 2e       	mov	r11, r31
 316:	f0 2d       	mov	r31, r0
 318:	6e 01       	movw	r12, r28
 31a:	24 e0       	ldi	r18, 0x04	; 4
 31c:	c2 0e       	add	r12, r18
 31e:	d1 1c       	adc	r13, r1
		char s[5];
		
		
		//int idx;
		// Trig Signal
		PORTB |= (1<<PINB3); 
 320:	2b 9a       	sbi	0x05, 3	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 322:	85 e0       	ldi	r24, 0x05	; 5
 324:	8a 95       	dec	r24
 326:	f1 f7       	brne	.-4      	; 0x324 <main+0x54>
		_delay_us(15); 
		PORTB &= ~(1<<PINB3);
 328:	2b 98       	cbi	0x05, 3	; 5
		
		cur = sensors[0].pulse / 58;
 32a:	f7 01       	movw	r30, r14
 32c:	80 81       	ld	r24, Z
 32e:	91 81       	ldd	r25, Z+1	; 0x01
 330:	b8 01       	movw	r22, r16
 332:	0e 94 dd 01 	call	0x3ba	; 0x3ba <__divmodhi4>
		if (cur <= 2 || cur >= 400) continue;
 336:	cb 01       	movw	r24, r22
 338:	03 97       	sbiw	r24, 0x03	; 3
 33a:	8d 38       	cpi	r24, 0x8D	; 141
 33c:	91 40       	sbci	r25, 0x01	; 1
 33e:	80 f7       	brcc	.-32     	; 0x320 <main+0x50>
		sprintf(s, "%d", cur);
 340:	7f 93       	push	r23
 342:	6f 93       	push	r22
 344:	bf 92       	push	r11
 346:	af 92       	push	r10
 348:	df 92       	push	r13
 34a:	cf 92       	push	r12
 34c:	0e 94 05 02 	call	0x40a	; 0x40a <sprintf>
		USART_putstring(s);
 350:	c6 01       	movw	r24, r12
 352:	0e 94 8c 00 	call	0x118	; 0x118 <USART_putstring>
		USART_putstring(space);
 356:	ce 01       	movw	r24, r28
 358:	01 96       	adiw	r24, 0x01	; 1
 35a:	0e 94 8c 00 	call	0x118	; 0x118 <USART_putstring>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 35e:	2f e3       	ldi	r18, 0x3F	; 63
 360:	8d e0       	ldi	r24, 0x0D	; 13
 362:	93 e0       	ldi	r25, 0x03	; 3
 364:	21 50       	subi	r18, 0x01	; 1
 366:	80 40       	sbci	r24, 0x00	; 0
 368:	90 40       	sbci	r25, 0x00	; 0
 36a:	e1 f7       	brne	.-8      	; 0x364 <main+0x94>
 36c:	00 c0       	rjmp	.+0      	; 0x36e <main+0x9e>
 36e:	00 00       	nop
 370:	0f 90       	pop	r0
 372:	0f 90       	pop	r0
 374:	0f 90       	pop	r0
 376:	0f 90       	pop	r0
 378:	0f 90       	pop	r0
 37a:	0f 90       	pop	r0
 37c:	d1 cf       	rjmp	.-94     	; 0x320 <main+0x50>

0000037e <Sensor_Init>:

void Sensor_Init(){
	//input(0), output(1), others: Don't care
	int idx;
	// Trig Pin Setup: PB3
	DDRB |= (1<<DDB3);
 37e:	23 9a       	sbi	0x04, 3	; 4
	
	// Echo Pin Setup: PD2(EXTINT0), PD3(EXTINT1), PB5(PCINT0)
	DDRD &= ~(1<<DDD2); 
 380:	52 98       	cbi	0x0a, 2	; 10
	//DDRD &= ~(1<<DDD3);
	//DDRB &= ~(1<<DDB4);

	// Turn on the pull-up
	PORTD |= (1<<PORTD2)/* | (1<<PORTD3)*/;
 382:	5a 9a       	sbi	0x0b, 2	; 11
 384:	83 ed       	ldi	r24, 0xD3	; 211
 386:	90 e3       	ldi	r25, 0x30	; 48
 388:	01 97       	sbiw	r24, 0x01	; 1
 38a:	f1 f7       	brne	.-4      	; 0x388 <Sensor_Init+0xa>
 38c:	00 c0       	rjmp	.+0      	; 0x38e <Sensor_Init+0x10>
 38e:	00 00       	nop
	//PORTB |= (1<<PORTB4);

	_delay_ms(50);

	// Enable the Interrupt
	EICRA |= (1<<ISC00) /*| (1<<ISC10)*/; // Set INT0 & INT1 to trigger on ANY logic change
 390:	e9 e6       	ldi	r30, 0x69	; 105
 392:	f0 e0       	ldi	r31, 0x00	; 0
 394:	80 81       	ld	r24, Z
 396:	81 60       	ori	r24, 0x01	; 1
 398:	80 83       	st	Z, r24
	EIMSK |= (1<<INT0)/* | (1<<INT1)*/;  // Turns on INT0 & INT1
 39a:	e8 9a       	sbi	0x1d, 0	; 29
	
	//PCICR |= (1<<PCIE0); 
	//PCMSK0 |= (1<<PCINT4);	

	for (idx = 0; idx < NUM_SENSOR; idx++){
		sensors[idx].pulse = 0;
 39c:	e2 e5       	ldi	r30, 0x52	; 82
 39e:	f1 e0       	ldi	r31, 0x01	; 1
 3a0:	11 82       	std	Z+1, r1	; 0x01
 3a2:	10 82       	st	Z, r1
		sensors[idx].flag = 0;
 3a4:	13 82       	std	Z+3, r1	; 0x03
 3a6:	12 82       	std	Z+2, r1	; 0x02
	
	//PCICR |= (1<<PCIE0); 
	//PCMSK0 |= (1<<PCINT4);	

	for (idx = 0; idx < NUM_SENSOR; idx++){
		sensors[idx].pulse = 0;
 3a8:	13 8e       	std	Z+27, r1	; 0x1b
 3aa:	12 8e       	std	Z+26, r1	; 0x1a
		sensors[idx].flag = 0;
 3ac:	15 8e       	std	Z+29, r1	; 0x1d
 3ae:	14 8e       	std	Z+28, r1	; 0x1c
	
	//PCICR |= (1<<PCIE0); 
	//PCMSK0 |= (1<<PCINT4);	

	for (idx = 0; idx < NUM_SENSOR; idx++){
		sensors[idx].pulse = 0;
 3b0:	15 aa       	std	Z+53, r1	; 0x35
 3b2:	14 aa       	std	Z+52, r1	; 0x34
		sensors[idx].flag = 0;
 3b4:	17 aa       	std	Z+55, r1	; 0x37
 3b6:	16 aa       	std	Z+54, r1	; 0x36
 3b8:	08 95       	ret

000003ba <__divmodhi4>:
 3ba:	97 fb       	bst	r25, 7
 3bc:	07 2e       	mov	r0, r23
 3be:	16 f4       	brtc	.+4      	; 0x3c4 <__divmodhi4+0xa>
 3c0:	00 94       	com	r0
 3c2:	07 d0       	rcall	.+14     	; 0x3d2 <__divmodhi4_neg1>
 3c4:	77 fd       	sbrc	r23, 7
 3c6:	09 d0       	rcall	.+18     	; 0x3da <__divmodhi4_neg2>
 3c8:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <__udivmodhi4>
 3cc:	07 fc       	sbrc	r0, 7
 3ce:	05 d0       	rcall	.+10     	; 0x3da <__divmodhi4_neg2>
 3d0:	3e f4       	brtc	.+14     	; 0x3e0 <__divmodhi4_exit>

000003d2 <__divmodhi4_neg1>:
 3d2:	90 95       	com	r25
 3d4:	81 95       	neg	r24
 3d6:	9f 4f       	sbci	r25, 0xFF	; 255
 3d8:	08 95       	ret

000003da <__divmodhi4_neg2>:
 3da:	70 95       	com	r23
 3dc:	61 95       	neg	r22
 3de:	7f 4f       	sbci	r23, 0xFF	; 255

000003e0 <__divmodhi4_exit>:
 3e0:	08 95       	ret

000003e2 <__udivmodhi4>:
 3e2:	aa 1b       	sub	r26, r26
 3e4:	bb 1b       	sub	r27, r27
 3e6:	51 e1       	ldi	r21, 0x11	; 17
 3e8:	07 c0       	rjmp	.+14     	; 0x3f8 <__udivmodhi4_ep>

000003ea <__udivmodhi4_loop>:
 3ea:	aa 1f       	adc	r26, r26
 3ec:	bb 1f       	adc	r27, r27
 3ee:	a6 17       	cp	r26, r22
 3f0:	b7 07       	cpc	r27, r23
 3f2:	10 f0       	brcs	.+4      	; 0x3f8 <__udivmodhi4_ep>
 3f4:	a6 1b       	sub	r26, r22
 3f6:	b7 0b       	sbc	r27, r23

000003f8 <__udivmodhi4_ep>:
 3f8:	88 1f       	adc	r24, r24
 3fa:	99 1f       	adc	r25, r25
 3fc:	5a 95       	dec	r21
 3fe:	a9 f7       	brne	.-22     	; 0x3ea <__udivmodhi4_loop>
 400:	80 95       	com	r24
 402:	90 95       	com	r25
 404:	bc 01       	movw	r22, r24
 406:	cd 01       	movw	r24, r26
 408:	08 95       	ret

0000040a <sprintf>:
 40a:	ae e0       	ldi	r26, 0x0E	; 14
 40c:	b0 e0       	ldi	r27, 0x00	; 0
 40e:	eb e0       	ldi	r30, 0x0B	; 11
 410:	f2 e0       	ldi	r31, 0x02	; 2
 412:	0c 94 c6 04 	jmp	0x98c	; 0x98c <__prologue_saves__+0x1c>
 416:	0d 89       	ldd	r16, Y+21	; 0x15
 418:	1e 89       	ldd	r17, Y+22	; 0x16
 41a:	86 e0       	ldi	r24, 0x06	; 6
 41c:	8c 83       	std	Y+4, r24	; 0x04
 41e:	1a 83       	std	Y+2, r17	; 0x02
 420:	09 83       	std	Y+1, r16	; 0x01
 422:	8f ef       	ldi	r24, 0xFF	; 255
 424:	9f e7       	ldi	r25, 0x7F	; 127
 426:	9e 83       	std	Y+6, r25	; 0x06
 428:	8d 83       	std	Y+5, r24	; 0x05
 42a:	ae 01       	movw	r20, r28
 42c:	47 5e       	subi	r20, 0xE7	; 231
 42e:	5f 4f       	sbci	r21, 0xFF	; 255
 430:	6f 89       	ldd	r22, Y+23	; 0x17
 432:	78 8d       	ldd	r23, Y+24	; 0x18
 434:	ce 01       	movw	r24, r28
 436:	01 96       	adiw	r24, 0x01	; 1
 438:	0e 94 27 02 	call	0x44e	; 0x44e <vfprintf>
 43c:	ef 81       	ldd	r30, Y+7	; 0x07
 43e:	f8 85       	ldd	r31, Y+8	; 0x08
 440:	e0 0f       	add	r30, r16
 442:	f1 1f       	adc	r31, r17
 444:	10 82       	st	Z, r1
 446:	2e 96       	adiw	r28, 0x0e	; 14
 448:	e4 e0       	ldi	r30, 0x04	; 4
 44a:	0c 94 e2 04 	jmp	0x9c4	; 0x9c4 <__epilogue_restores__+0x1c>

0000044e <vfprintf>:
 44e:	ab e0       	ldi	r26, 0x0B	; 11
 450:	b0 e0       	ldi	r27, 0x00	; 0
 452:	ed e2       	ldi	r30, 0x2D	; 45
 454:	f2 e0       	ldi	r31, 0x02	; 2
 456:	0c 94 b8 04 	jmp	0x970	; 0x970 <__prologue_saves__>
 45a:	6c 01       	movw	r12, r24
 45c:	7b 01       	movw	r14, r22
 45e:	8a 01       	movw	r16, r20
 460:	fc 01       	movw	r30, r24
 462:	17 82       	std	Z+7, r1	; 0x07
 464:	16 82       	std	Z+6, r1	; 0x06
 466:	83 81       	ldd	r24, Z+3	; 0x03
 468:	81 ff       	sbrs	r24, 1
 46a:	cc c1       	rjmp	.+920    	; 0x804 <vfprintf+0x3b6>
 46c:	ce 01       	movw	r24, r28
 46e:	01 96       	adiw	r24, 0x01	; 1
 470:	3c 01       	movw	r6, r24
 472:	f6 01       	movw	r30, r12
 474:	93 81       	ldd	r25, Z+3	; 0x03
 476:	f7 01       	movw	r30, r14
 478:	93 fd       	sbrc	r25, 3
 47a:	85 91       	lpm	r24, Z+
 47c:	93 ff       	sbrs	r25, 3
 47e:	81 91       	ld	r24, Z+
 480:	7f 01       	movw	r14, r30
 482:	88 23       	and	r24, r24
 484:	09 f4       	brne	.+2      	; 0x488 <vfprintf+0x3a>
 486:	ba c1       	rjmp	.+884    	; 0x7fc <vfprintf+0x3ae>
 488:	85 32       	cpi	r24, 0x25	; 37
 48a:	39 f4       	brne	.+14     	; 0x49a <vfprintf+0x4c>
 48c:	93 fd       	sbrc	r25, 3
 48e:	85 91       	lpm	r24, Z+
 490:	93 ff       	sbrs	r25, 3
 492:	81 91       	ld	r24, Z+
 494:	7f 01       	movw	r14, r30
 496:	85 32       	cpi	r24, 0x25	; 37
 498:	29 f4       	brne	.+10     	; 0x4a4 <vfprintf+0x56>
 49a:	b6 01       	movw	r22, r12
 49c:	90 e0       	ldi	r25, 0x00	; 0
 49e:	0e 94 1e 04 	call	0x83c	; 0x83c <fputc>
 4a2:	e7 cf       	rjmp	.-50     	; 0x472 <vfprintf+0x24>
 4a4:	91 2c       	mov	r9, r1
 4a6:	21 2c       	mov	r2, r1
 4a8:	31 2c       	mov	r3, r1
 4aa:	ff e1       	ldi	r31, 0x1F	; 31
 4ac:	f3 15       	cp	r31, r3
 4ae:	d8 f0       	brcs	.+54     	; 0x4e6 <vfprintf+0x98>
 4b0:	8b 32       	cpi	r24, 0x2B	; 43
 4b2:	79 f0       	breq	.+30     	; 0x4d2 <vfprintf+0x84>
 4b4:	38 f4       	brcc	.+14     	; 0x4c4 <vfprintf+0x76>
 4b6:	80 32       	cpi	r24, 0x20	; 32
 4b8:	79 f0       	breq	.+30     	; 0x4d8 <vfprintf+0x8a>
 4ba:	83 32       	cpi	r24, 0x23	; 35
 4bc:	a1 f4       	brne	.+40     	; 0x4e6 <vfprintf+0x98>
 4be:	23 2d       	mov	r18, r3
 4c0:	20 61       	ori	r18, 0x10	; 16
 4c2:	1d c0       	rjmp	.+58     	; 0x4fe <vfprintf+0xb0>
 4c4:	8d 32       	cpi	r24, 0x2D	; 45
 4c6:	61 f0       	breq	.+24     	; 0x4e0 <vfprintf+0x92>
 4c8:	80 33       	cpi	r24, 0x30	; 48
 4ca:	69 f4       	brne	.+26     	; 0x4e6 <vfprintf+0x98>
 4cc:	23 2d       	mov	r18, r3
 4ce:	21 60       	ori	r18, 0x01	; 1
 4d0:	16 c0       	rjmp	.+44     	; 0x4fe <vfprintf+0xb0>
 4d2:	83 2d       	mov	r24, r3
 4d4:	82 60       	ori	r24, 0x02	; 2
 4d6:	38 2e       	mov	r3, r24
 4d8:	e3 2d       	mov	r30, r3
 4da:	e4 60       	ori	r30, 0x04	; 4
 4dc:	3e 2e       	mov	r3, r30
 4de:	2a c0       	rjmp	.+84     	; 0x534 <vfprintf+0xe6>
 4e0:	f3 2d       	mov	r31, r3
 4e2:	f8 60       	ori	r31, 0x08	; 8
 4e4:	1d c0       	rjmp	.+58     	; 0x520 <vfprintf+0xd2>
 4e6:	37 fc       	sbrc	r3, 7
 4e8:	2d c0       	rjmp	.+90     	; 0x544 <vfprintf+0xf6>
 4ea:	20 ed       	ldi	r18, 0xD0	; 208
 4ec:	28 0f       	add	r18, r24
 4ee:	2a 30       	cpi	r18, 0x0A	; 10
 4f0:	40 f0       	brcs	.+16     	; 0x502 <vfprintf+0xb4>
 4f2:	8e 32       	cpi	r24, 0x2E	; 46
 4f4:	b9 f4       	brne	.+46     	; 0x524 <vfprintf+0xd6>
 4f6:	36 fc       	sbrc	r3, 6
 4f8:	81 c1       	rjmp	.+770    	; 0x7fc <vfprintf+0x3ae>
 4fa:	23 2d       	mov	r18, r3
 4fc:	20 64       	ori	r18, 0x40	; 64
 4fe:	32 2e       	mov	r3, r18
 500:	19 c0       	rjmp	.+50     	; 0x534 <vfprintf+0xe6>
 502:	36 fe       	sbrs	r3, 6
 504:	06 c0       	rjmp	.+12     	; 0x512 <vfprintf+0xc4>
 506:	8a e0       	ldi	r24, 0x0A	; 10
 508:	98 9e       	mul	r9, r24
 50a:	20 0d       	add	r18, r0
 50c:	11 24       	eor	r1, r1
 50e:	92 2e       	mov	r9, r18
 510:	11 c0       	rjmp	.+34     	; 0x534 <vfprintf+0xe6>
 512:	ea e0       	ldi	r30, 0x0A	; 10
 514:	2e 9e       	mul	r2, r30
 516:	20 0d       	add	r18, r0
 518:	11 24       	eor	r1, r1
 51a:	22 2e       	mov	r2, r18
 51c:	f3 2d       	mov	r31, r3
 51e:	f0 62       	ori	r31, 0x20	; 32
 520:	3f 2e       	mov	r3, r31
 522:	08 c0       	rjmp	.+16     	; 0x534 <vfprintf+0xe6>
 524:	8c 36       	cpi	r24, 0x6C	; 108
 526:	21 f4       	brne	.+8      	; 0x530 <vfprintf+0xe2>
 528:	83 2d       	mov	r24, r3
 52a:	80 68       	ori	r24, 0x80	; 128
 52c:	38 2e       	mov	r3, r24
 52e:	02 c0       	rjmp	.+4      	; 0x534 <vfprintf+0xe6>
 530:	88 36       	cpi	r24, 0x68	; 104
 532:	41 f4       	brne	.+16     	; 0x544 <vfprintf+0xf6>
 534:	f7 01       	movw	r30, r14
 536:	93 fd       	sbrc	r25, 3
 538:	85 91       	lpm	r24, Z+
 53a:	93 ff       	sbrs	r25, 3
 53c:	81 91       	ld	r24, Z+
 53e:	7f 01       	movw	r14, r30
 540:	81 11       	cpse	r24, r1
 542:	b3 cf       	rjmp	.-154    	; 0x4aa <vfprintf+0x5c>
 544:	98 2f       	mov	r25, r24
 546:	9f 7d       	andi	r25, 0xDF	; 223
 548:	95 54       	subi	r25, 0x45	; 69
 54a:	93 30       	cpi	r25, 0x03	; 3
 54c:	28 f4       	brcc	.+10     	; 0x558 <vfprintf+0x10a>
 54e:	0c 5f       	subi	r16, 0xFC	; 252
 550:	1f 4f       	sbci	r17, 0xFF	; 255
 552:	9f e3       	ldi	r25, 0x3F	; 63
 554:	99 83       	std	Y+1, r25	; 0x01
 556:	0d c0       	rjmp	.+26     	; 0x572 <vfprintf+0x124>
 558:	83 36       	cpi	r24, 0x63	; 99
 55a:	31 f0       	breq	.+12     	; 0x568 <vfprintf+0x11a>
 55c:	83 37       	cpi	r24, 0x73	; 115
 55e:	71 f0       	breq	.+28     	; 0x57c <vfprintf+0x12e>
 560:	83 35       	cpi	r24, 0x53	; 83
 562:	09 f0       	breq	.+2      	; 0x566 <vfprintf+0x118>
 564:	59 c0       	rjmp	.+178    	; 0x618 <vfprintf+0x1ca>
 566:	21 c0       	rjmp	.+66     	; 0x5aa <vfprintf+0x15c>
 568:	f8 01       	movw	r30, r16
 56a:	80 81       	ld	r24, Z
 56c:	89 83       	std	Y+1, r24	; 0x01
 56e:	0e 5f       	subi	r16, 0xFE	; 254
 570:	1f 4f       	sbci	r17, 0xFF	; 255
 572:	88 24       	eor	r8, r8
 574:	83 94       	inc	r8
 576:	91 2c       	mov	r9, r1
 578:	53 01       	movw	r10, r6
 57a:	13 c0       	rjmp	.+38     	; 0x5a2 <vfprintf+0x154>
 57c:	28 01       	movw	r4, r16
 57e:	f2 e0       	ldi	r31, 0x02	; 2
 580:	4f 0e       	add	r4, r31
 582:	51 1c       	adc	r5, r1
 584:	f8 01       	movw	r30, r16
 586:	a0 80       	ld	r10, Z
 588:	b1 80       	ldd	r11, Z+1	; 0x01
 58a:	36 fe       	sbrs	r3, 6
 58c:	03 c0       	rjmp	.+6      	; 0x594 <vfprintf+0x146>
 58e:	69 2d       	mov	r22, r9
 590:	70 e0       	ldi	r23, 0x00	; 0
 592:	02 c0       	rjmp	.+4      	; 0x598 <vfprintf+0x14a>
 594:	6f ef       	ldi	r22, 0xFF	; 255
 596:	7f ef       	ldi	r23, 0xFF	; 255
 598:	c5 01       	movw	r24, r10
 59a:	0e 94 13 04 	call	0x826	; 0x826 <strnlen>
 59e:	4c 01       	movw	r8, r24
 5a0:	82 01       	movw	r16, r4
 5a2:	f3 2d       	mov	r31, r3
 5a4:	ff 77       	andi	r31, 0x7F	; 127
 5a6:	3f 2e       	mov	r3, r31
 5a8:	16 c0       	rjmp	.+44     	; 0x5d6 <vfprintf+0x188>
 5aa:	28 01       	movw	r4, r16
 5ac:	22 e0       	ldi	r18, 0x02	; 2
 5ae:	42 0e       	add	r4, r18
 5b0:	51 1c       	adc	r5, r1
 5b2:	f8 01       	movw	r30, r16
 5b4:	a0 80       	ld	r10, Z
 5b6:	b1 80       	ldd	r11, Z+1	; 0x01
 5b8:	36 fe       	sbrs	r3, 6
 5ba:	03 c0       	rjmp	.+6      	; 0x5c2 <vfprintf+0x174>
 5bc:	69 2d       	mov	r22, r9
 5be:	70 e0       	ldi	r23, 0x00	; 0
 5c0:	02 c0       	rjmp	.+4      	; 0x5c6 <vfprintf+0x178>
 5c2:	6f ef       	ldi	r22, 0xFF	; 255
 5c4:	7f ef       	ldi	r23, 0xFF	; 255
 5c6:	c5 01       	movw	r24, r10
 5c8:	0e 94 08 04 	call	0x810	; 0x810 <strnlen_P>
 5cc:	4c 01       	movw	r8, r24
 5ce:	f3 2d       	mov	r31, r3
 5d0:	f0 68       	ori	r31, 0x80	; 128
 5d2:	3f 2e       	mov	r3, r31
 5d4:	82 01       	movw	r16, r4
 5d6:	33 fc       	sbrc	r3, 3
 5d8:	1b c0       	rjmp	.+54     	; 0x610 <vfprintf+0x1c2>
 5da:	82 2d       	mov	r24, r2
 5dc:	90 e0       	ldi	r25, 0x00	; 0
 5de:	88 16       	cp	r8, r24
 5e0:	99 06       	cpc	r9, r25
 5e2:	b0 f4       	brcc	.+44     	; 0x610 <vfprintf+0x1c2>
 5e4:	b6 01       	movw	r22, r12
 5e6:	80 e2       	ldi	r24, 0x20	; 32
 5e8:	90 e0       	ldi	r25, 0x00	; 0
 5ea:	0e 94 1e 04 	call	0x83c	; 0x83c <fputc>
 5ee:	2a 94       	dec	r2
 5f0:	f4 cf       	rjmp	.-24     	; 0x5da <vfprintf+0x18c>
 5f2:	f5 01       	movw	r30, r10
 5f4:	37 fc       	sbrc	r3, 7
 5f6:	85 91       	lpm	r24, Z+
 5f8:	37 fe       	sbrs	r3, 7
 5fa:	81 91       	ld	r24, Z+
 5fc:	5f 01       	movw	r10, r30
 5fe:	b6 01       	movw	r22, r12
 600:	90 e0       	ldi	r25, 0x00	; 0
 602:	0e 94 1e 04 	call	0x83c	; 0x83c <fputc>
 606:	21 10       	cpse	r2, r1
 608:	2a 94       	dec	r2
 60a:	21 e0       	ldi	r18, 0x01	; 1
 60c:	82 1a       	sub	r8, r18
 60e:	91 08       	sbc	r9, r1
 610:	81 14       	cp	r8, r1
 612:	91 04       	cpc	r9, r1
 614:	71 f7       	brne	.-36     	; 0x5f2 <vfprintf+0x1a4>
 616:	e8 c0       	rjmp	.+464    	; 0x7e8 <vfprintf+0x39a>
 618:	84 36       	cpi	r24, 0x64	; 100
 61a:	11 f0       	breq	.+4      	; 0x620 <vfprintf+0x1d2>
 61c:	89 36       	cpi	r24, 0x69	; 105
 61e:	41 f5       	brne	.+80     	; 0x670 <vfprintf+0x222>
 620:	f8 01       	movw	r30, r16
 622:	37 fe       	sbrs	r3, 7
 624:	07 c0       	rjmp	.+14     	; 0x634 <vfprintf+0x1e6>
 626:	60 81       	ld	r22, Z
 628:	71 81       	ldd	r23, Z+1	; 0x01
 62a:	82 81       	ldd	r24, Z+2	; 0x02
 62c:	93 81       	ldd	r25, Z+3	; 0x03
 62e:	0c 5f       	subi	r16, 0xFC	; 252
 630:	1f 4f       	sbci	r17, 0xFF	; 255
 632:	08 c0       	rjmp	.+16     	; 0x644 <vfprintf+0x1f6>
 634:	60 81       	ld	r22, Z
 636:	71 81       	ldd	r23, Z+1	; 0x01
 638:	07 2e       	mov	r0, r23
 63a:	00 0c       	add	r0, r0
 63c:	88 0b       	sbc	r24, r24
 63e:	99 0b       	sbc	r25, r25
 640:	0e 5f       	subi	r16, 0xFE	; 254
 642:	1f 4f       	sbci	r17, 0xFF	; 255
 644:	f3 2d       	mov	r31, r3
 646:	ff 76       	andi	r31, 0x6F	; 111
 648:	3f 2e       	mov	r3, r31
 64a:	97 ff       	sbrs	r25, 7
 64c:	09 c0       	rjmp	.+18     	; 0x660 <vfprintf+0x212>
 64e:	90 95       	com	r25
 650:	80 95       	com	r24
 652:	70 95       	com	r23
 654:	61 95       	neg	r22
 656:	7f 4f       	sbci	r23, 0xFF	; 255
 658:	8f 4f       	sbci	r24, 0xFF	; 255
 65a:	9f 4f       	sbci	r25, 0xFF	; 255
 65c:	f0 68       	ori	r31, 0x80	; 128
 65e:	3f 2e       	mov	r3, r31
 660:	2a e0       	ldi	r18, 0x0A	; 10
 662:	30 e0       	ldi	r19, 0x00	; 0
 664:	a3 01       	movw	r20, r6
 666:	0e 94 5a 04 	call	0x8b4	; 0x8b4 <__ultoa_invert>
 66a:	88 2e       	mov	r8, r24
 66c:	86 18       	sub	r8, r6
 66e:	45 c0       	rjmp	.+138    	; 0x6fa <vfprintf+0x2ac>
 670:	85 37       	cpi	r24, 0x75	; 117
 672:	31 f4       	brne	.+12     	; 0x680 <vfprintf+0x232>
 674:	23 2d       	mov	r18, r3
 676:	2f 7e       	andi	r18, 0xEF	; 239
 678:	b2 2e       	mov	r11, r18
 67a:	2a e0       	ldi	r18, 0x0A	; 10
 67c:	30 e0       	ldi	r19, 0x00	; 0
 67e:	25 c0       	rjmp	.+74     	; 0x6ca <vfprintf+0x27c>
 680:	93 2d       	mov	r25, r3
 682:	99 7f       	andi	r25, 0xF9	; 249
 684:	b9 2e       	mov	r11, r25
 686:	8f 36       	cpi	r24, 0x6F	; 111
 688:	c1 f0       	breq	.+48     	; 0x6ba <vfprintf+0x26c>
 68a:	18 f4       	brcc	.+6      	; 0x692 <vfprintf+0x244>
 68c:	88 35       	cpi	r24, 0x58	; 88
 68e:	79 f0       	breq	.+30     	; 0x6ae <vfprintf+0x260>
 690:	b5 c0       	rjmp	.+362    	; 0x7fc <vfprintf+0x3ae>
 692:	80 37       	cpi	r24, 0x70	; 112
 694:	19 f0       	breq	.+6      	; 0x69c <vfprintf+0x24e>
 696:	88 37       	cpi	r24, 0x78	; 120
 698:	21 f0       	breq	.+8      	; 0x6a2 <vfprintf+0x254>
 69a:	b0 c0       	rjmp	.+352    	; 0x7fc <vfprintf+0x3ae>
 69c:	e9 2f       	mov	r30, r25
 69e:	e0 61       	ori	r30, 0x10	; 16
 6a0:	be 2e       	mov	r11, r30
 6a2:	b4 fe       	sbrs	r11, 4
 6a4:	0d c0       	rjmp	.+26     	; 0x6c0 <vfprintf+0x272>
 6a6:	fb 2d       	mov	r31, r11
 6a8:	f4 60       	ori	r31, 0x04	; 4
 6aa:	bf 2e       	mov	r11, r31
 6ac:	09 c0       	rjmp	.+18     	; 0x6c0 <vfprintf+0x272>
 6ae:	34 fe       	sbrs	r3, 4
 6b0:	0a c0       	rjmp	.+20     	; 0x6c6 <vfprintf+0x278>
 6b2:	29 2f       	mov	r18, r25
 6b4:	26 60       	ori	r18, 0x06	; 6
 6b6:	b2 2e       	mov	r11, r18
 6b8:	06 c0       	rjmp	.+12     	; 0x6c6 <vfprintf+0x278>
 6ba:	28 e0       	ldi	r18, 0x08	; 8
 6bc:	30 e0       	ldi	r19, 0x00	; 0
 6be:	05 c0       	rjmp	.+10     	; 0x6ca <vfprintf+0x27c>
 6c0:	20 e1       	ldi	r18, 0x10	; 16
 6c2:	30 e0       	ldi	r19, 0x00	; 0
 6c4:	02 c0       	rjmp	.+4      	; 0x6ca <vfprintf+0x27c>
 6c6:	20 e1       	ldi	r18, 0x10	; 16
 6c8:	32 e0       	ldi	r19, 0x02	; 2
 6ca:	f8 01       	movw	r30, r16
 6cc:	b7 fe       	sbrs	r11, 7
 6ce:	07 c0       	rjmp	.+14     	; 0x6de <vfprintf+0x290>
 6d0:	60 81       	ld	r22, Z
 6d2:	71 81       	ldd	r23, Z+1	; 0x01
 6d4:	82 81       	ldd	r24, Z+2	; 0x02
 6d6:	93 81       	ldd	r25, Z+3	; 0x03
 6d8:	0c 5f       	subi	r16, 0xFC	; 252
 6da:	1f 4f       	sbci	r17, 0xFF	; 255
 6dc:	06 c0       	rjmp	.+12     	; 0x6ea <vfprintf+0x29c>
 6de:	60 81       	ld	r22, Z
 6e0:	71 81       	ldd	r23, Z+1	; 0x01
 6e2:	80 e0       	ldi	r24, 0x00	; 0
 6e4:	90 e0       	ldi	r25, 0x00	; 0
 6e6:	0e 5f       	subi	r16, 0xFE	; 254
 6e8:	1f 4f       	sbci	r17, 0xFF	; 255
 6ea:	a3 01       	movw	r20, r6
 6ec:	0e 94 5a 04 	call	0x8b4	; 0x8b4 <__ultoa_invert>
 6f0:	88 2e       	mov	r8, r24
 6f2:	86 18       	sub	r8, r6
 6f4:	fb 2d       	mov	r31, r11
 6f6:	ff 77       	andi	r31, 0x7F	; 127
 6f8:	3f 2e       	mov	r3, r31
 6fa:	36 fe       	sbrs	r3, 6
 6fc:	0d c0       	rjmp	.+26     	; 0x718 <vfprintf+0x2ca>
 6fe:	23 2d       	mov	r18, r3
 700:	2e 7f       	andi	r18, 0xFE	; 254
 702:	a2 2e       	mov	r10, r18
 704:	89 14       	cp	r8, r9
 706:	58 f4       	brcc	.+22     	; 0x71e <vfprintf+0x2d0>
 708:	34 fe       	sbrs	r3, 4
 70a:	0b c0       	rjmp	.+22     	; 0x722 <vfprintf+0x2d4>
 70c:	32 fc       	sbrc	r3, 2
 70e:	09 c0       	rjmp	.+18     	; 0x722 <vfprintf+0x2d4>
 710:	83 2d       	mov	r24, r3
 712:	8e 7e       	andi	r24, 0xEE	; 238
 714:	a8 2e       	mov	r10, r24
 716:	05 c0       	rjmp	.+10     	; 0x722 <vfprintf+0x2d4>
 718:	b8 2c       	mov	r11, r8
 71a:	a3 2c       	mov	r10, r3
 71c:	03 c0       	rjmp	.+6      	; 0x724 <vfprintf+0x2d6>
 71e:	b8 2c       	mov	r11, r8
 720:	01 c0       	rjmp	.+2      	; 0x724 <vfprintf+0x2d6>
 722:	b9 2c       	mov	r11, r9
 724:	a4 fe       	sbrs	r10, 4
 726:	0f c0       	rjmp	.+30     	; 0x746 <vfprintf+0x2f8>
 728:	fe 01       	movw	r30, r28
 72a:	e8 0d       	add	r30, r8
 72c:	f1 1d       	adc	r31, r1
 72e:	80 81       	ld	r24, Z
 730:	80 33       	cpi	r24, 0x30	; 48
 732:	21 f4       	brne	.+8      	; 0x73c <vfprintf+0x2ee>
 734:	9a 2d       	mov	r25, r10
 736:	99 7e       	andi	r25, 0xE9	; 233
 738:	a9 2e       	mov	r10, r25
 73a:	09 c0       	rjmp	.+18     	; 0x74e <vfprintf+0x300>
 73c:	a2 fe       	sbrs	r10, 2
 73e:	06 c0       	rjmp	.+12     	; 0x74c <vfprintf+0x2fe>
 740:	b3 94       	inc	r11
 742:	b3 94       	inc	r11
 744:	04 c0       	rjmp	.+8      	; 0x74e <vfprintf+0x300>
 746:	8a 2d       	mov	r24, r10
 748:	86 78       	andi	r24, 0x86	; 134
 74a:	09 f0       	breq	.+2      	; 0x74e <vfprintf+0x300>
 74c:	b3 94       	inc	r11
 74e:	a3 fc       	sbrc	r10, 3
 750:	11 c0       	rjmp	.+34     	; 0x774 <vfprintf+0x326>
 752:	a0 fe       	sbrs	r10, 0
 754:	06 c0       	rjmp	.+12     	; 0x762 <vfprintf+0x314>
 756:	b2 14       	cp	r11, r2
 758:	88 f4       	brcc	.+34     	; 0x77c <vfprintf+0x32e>
 75a:	28 0c       	add	r2, r8
 75c:	92 2c       	mov	r9, r2
 75e:	9b 18       	sub	r9, r11
 760:	0e c0       	rjmp	.+28     	; 0x77e <vfprintf+0x330>
 762:	b2 14       	cp	r11, r2
 764:	60 f4       	brcc	.+24     	; 0x77e <vfprintf+0x330>
 766:	b6 01       	movw	r22, r12
 768:	80 e2       	ldi	r24, 0x20	; 32
 76a:	90 e0       	ldi	r25, 0x00	; 0
 76c:	0e 94 1e 04 	call	0x83c	; 0x83c <fputc>
 770:	b3 94       	inc	r11
 772:	f7 cf       	rjmp	.-18     	; 0x762 <vfprintf+0x314>
 774:	b2 14       	cp	r11, r2
 776:	18 f4       	brcc	.+6      	; 0x77e <vfprintf+0x330>
 778:	2b 18       	sub	r2, r11
 77a:	02 c0       	rjmp	.+4      	; 0x780 <vfprintf+0x332>
 77c:	98 2c       	mov	r9, r8
 77e:	21 2c       	mov	r2, r1
 780:	a4 fe       	sbrs	r10, 4
 782:	10 c0       	rjmp	.+32     	; 0x7a4 <vfprintf+0x356>
 784:	b6 01       	movw	r22, r12
 786:	80 e3       	ldi	r24, 0x30	; 48
 788:	90 e0       	ldi	r25, 0x00	; 0
 78a:	0e 94 1e 04 	call	0x83c	; 0x83c <fputc>
 78e:	a2 fe       	sbrs	r10, 2
 790:	17 c0       	rjmp	.+46     	; 0x7c0 <vfprintf+0x372>
 792:	a1 fc       	sbrc	r10, 1
 794:	03 c0       	rjmp	.+6      	; 0x79c <vfprintf+0x34e>
 796:	88 e7       	ldi	r24, 0x78	; 120
 798:	90 e0       	ldi	r25, 0x00	; 0
 79a:	02 c0       	rjmp	.+4      	; 0x7a0 <vfprintf+0x352>
 79c:	88 e5       	ldi	r24, 0x58	; 88
 79e:	90 e0       	ldi	r25, 0x00	; 0
 7a0:	b6 01       	movw	r22, r12
 7a2:	0c c0       	rjmp	.+24     	; 0x7bc <vfprintf+0x36e>
 7a4:	8a 2d       	mov	r24, r10
 7a6:	86 78       	andi	r24, 0x86	; 134
 7a8:	59 f0       	breq	.+22     	; 0x7c0 <vfprintf+0x372>
 7aa:	a1 fe       	sbrs	r10, 1
 7ac:	02 c0       	rjmp	.+4      	; 0x7b2 <vfprintf+0x364>
 7ae:	8b e2       	ldi	r24, 0x2B	; 43
 7b0:	01 c0       	rjmp	.+2      	; 0x7b4 <vfprintf+0x366>
 7b2:	80 e2       	ldi	r24, 0x20	; 32
 7b4:	a7 fc       	sbrc	r10, 7
 7b6:	8d e2       	ldi	r24, 0x2D	; 45
 7b8:	b6 01       	movw	r22, r12
 7ba:	90 e0       	ldi	r25, 0x00	; 0
 7bc:	0e 94 1e 04 	call	0x83c	; 0x83c <fputc>
 7c0:	89 14       	cp	r8, r9
 7c2:	38 f4       	brcc	.+14     	; 0x7d2 <vfprintf+0x384>
 7c4:	b6 01       	movw	r22, r12
 7c6:	80 e3       	ldi	r24, 0x30	; 48
 7c8:	90 e0       	ldi	r25, 0x00	; 0
 7ca:	0e 94 1e 04 	call	0x83c	; 0x83c <fputc>
 7ce:	9a 94       	dec	r9
 7d0:	f7 cf       	rjmp	.-18     	; 0x7c0 <vfprintf+0x372>
 7d2:	8a 94       	dec	r8
 7d4:	f3 01       	movw	r30, r6
 7d6:	e8 0d       	add	r30, r8
 7d8:	f1 1d       	adc	r31, r1
 7da:	80 81       	ld	r24, Z
 7dc:	b6 01       	movw	r22, r12
 7de:	90 e0       	ldi	r25, 0x00	; 0
 7e0:	0e 94 1e 04 	call	0x83c	; 0x83c <fputc>
 7e4:	81 10       	cpse	r8, r1
 7e6:	f5 cf       	rjmp	.-22     	; 0x7d2 <vfprintf+0x384>
 7e8:	22 20       	and	r2, r2
 7ea:	09 f4       	brne	.+2      	; 0x7ee <vfprintf+0x3a0>
 7ec:	42 ce       	rjmp	.-892    	; 0x472 <vfprintf+0x24>
 7ee:	b6 01       	movw	r22, r12
 7f0:	80 e2       	ldi	r24, 0x20	; 32
 7f2:	90 e0       	ldi	r25, 0x00	; 0
 7f4:	0e 94 1e 04 	call	0x83c	; 0x83c <fputc>
 7f8:	2a 94       	dec	r2
 7fa:	f6 cf       	rjmp	.-20     	; 0x7e8 <vfprintf+0x39a>
 7fc:	f6 01       	movw	r30, r12
 7fe:	86 81       	ldd	r24, Z+6	; 0x06
 800:	97 81       	ldd	r25, Z+7	; 0x07
 802:	02 c0       	rjmp	.+4      	; 0x808 <vfprintf+0x3ba>
 804:	8f ef       	ldi	r24, 0xFF	; 255
 806:	9f ef       	ldi	r25, 0xFF	; 255
 808:	2b 96       	adiw	r28, 0x0b	; 11
 80a:	e2 e1       	ldi	r30, 0x12	; 18
 80c:	0c 94 d4 04 	jmp	0x9a8	; 0x9a8 <__epilogue_restores__>

00000810 <strnlen_P>:
 810:	fc 01       	movw	r30, r24
 812:	05 90       	lpm	r0, Z+
 814:	61 50       	subi	r22, 0x01	; 1
 816:	70 40       	sbci	r23, 0x00	; 0
 818:	01 10       	cpse	r0, r1
 81a:	d8 f7       	brcc	.-10     	; 0x812 <strnlen_P+0x2>
 81c:	80 95       	com	r24
 81e:	90 95       	com	r25
 820:	8e 0f       	add	r24, r30
 822:	9f 1f       	adc	r25, r31
 824:	08 95       	ret

00000826 <strnlen>:
 826:	fc 01       	movw	r30, r24
 828:	61 50       	subi	r22, 0x01	; 1
 82a:	70 40       	sbci	r23, 0x00	; 0
 82c:	01 90       	ld	r0, Z+
 82e:	01 10       	cpse	r0, r1
 830:	d8 f7       	brcc	.-10     	; 0x828 <strnlen+0x2>
 832:	80 95       	com	r24
 834:	90 95       	com	r25
 836:	8e 0f       	add	r24, r30
 838:	9f 1f       	adc	r25, r31
 83a:	08 95       	ret

0000083c <fputc>:
 83c:	0f 93       	push	r16
 83e:	1f 93       	push	r17
 840:	cf 93       	push	r28
 842:	df 93       	push	r29
 844:	fb 01       	movw	r30, r22
 846:	23 81       	ldd	r18, Z+3	; 0x03
 848:	21 fd       	sbrc	r18, 1
 84a:	03 c0       	rjmp	.+6      	; 0x852 <fputc+0x16>
 84c:	8f ef       	ldi	r24, 0xFF	; 255
 84e:	9f ef       	ldi	r25, 0xFF	; 255
 850:	2c c0       	rjmp	.+88     	; 0x8aa <fputc+0x6e>
 852:	22 ff       	sbrs	r18, 2
 854:	16 c0       	rjmp	.+44     	; 0x882 <fputc+0x46>
 856:	46 81       	ldd	r20, Z+6	; 0x06
 858:	57 81       	ldd	r21, Z+7	; 0x07
 85a:	24 81       	ldd	r18, Z+4	; 0x04
 85c:	35 81       	ldd	r19, Z+5	; 0x05
 85e:	42 17       	cp	r20, r18
 860:	53 07       	cpc	r21, r19
 862:	44 f4       	brge	.+16     	; 0x874 <fputc+0x38>
 864:	a0 81       	ld	r26, Z
 866:	b1 81       	ldd	r27, Z+1	; 0x01
 868:	9d 01       	movw	r18, r26
 86a:	2f 5f       	subi	r18, 0xFF	; 255
 86c:	3f 4f       	sbci	r19, 0xFF	; 255
 86e:	31 83       	std	Z+1, r19	; 0x01
 870:	20 83       	st	Z, r18
 872:	8c 93       	st	X, r24
 874:	26 81       	ldd	r18, Z+6	; 0x06
 876:	37 81       	ldd	r19, Z+7	; 0x07
 878:	2f 5f       	subi	r18, 0xFF	; 255
 87a:	3f 4f       	sbci	r19, 0xFF	; 255
 87c:	37 83       	std	Z+7, r19	; 0x07
 87e:	26 83       	std	Z+6, r18	; 0x06
 880:	14 c0       	rjmp	.+40     	; 0x8aa <fputc+0x6e>
 882:	8b 01       	movw	r16, r22
 884:	ec 01       	movw	r28, r24
 886:	fb 01       	movw	r30, r22
 888:	00 84       	ldd	r0, Z+8	; 0x08
 88a:	f1 85       	ldd	r31, Z+9	; 0x09
 88c:	e0 2d       	mov	r30, r0
 88e:	09 95       	icall
 890:	89 2b       	or	r24, r25
 892:	e1 f6       	brne	.-72     	; 0x84c <fputc+0x10>
 894:	d8 01       	movw	r26, r16
 896:	16 96       	adiw	r26, 0x06	; 6
 898:	8d 91       	ld	r24, X+
 89a:	9c 91       	ld	r25, X
 89c:	17 97       	sbiw	r26, 0x07	; 7
 89e:	01 96       	adiw	r24, 0x01	; 1
 8a0:	17 96       	adiw	r26, 0x07	; 7
 8a2:	9c 93       	st	X, r25
 8a4:	8e 93       	st	-X, r24
 8a6:	16 97       	sbiw	r26, 0x06	; 6
 8a8:	ce 01       	movw	r24, r28
 8aa:	df 91       	pop	r29
 8ac:	cf 91       	pop	r28
 8ae:	1f 91       	pop	r17
 8b0:	0f 91       	pop	r16
 8b2:	08 95       	ret

000008b4 <__ultoa_invert>:
 8b4:	fa 01       	movw	r30, r20
 8b6:	aa 27       	eor	r26, r26
 8b8:	28 30       	cpi	r18, 0x08	; 8
 8ba:	51 f1       	breq	.+84     	; 0x910 <__stack+0x11>
 8bc:	20 31       	cpi	r18, 0x10	; 16
 8be:	81 f1       	breq	.+96     	; 0x920 <__stack+0x21>
 8c0:	e8 94       	clt
 8c2:	6f 93       	push	r22
 8c4:	6e 7f       	andi	r22, 0xFE	; 254
 8c6:	6e 5f       	subi	r22, 0xFE	; 254
 8c8:	7f 4f       	sbci	r23, 0xFF	; 255
 8ca:	8f 4f       	sbci	r24, 0xFF	; 255
 8cc:	9f 4f       	sbci	r25, 0xFF	; 255
 8ce:	af 4f       	sbci	r26, 0xFF	; 255
 8d0:	b1 e0       	ldi	r27, 0x01	; 1
 8d2:	3e d0       	rcall	.+124    	; 0x950 <__stack+0x51>
 8d4:	b4 e0       	ldi	r27, 0x04	; 4
 8d6:	3c d0       	rcall	.+120    	; 0x950 <__stack+0x51>
 8d8:	67 0f       	add	r22, r23
 8da:	78 1f       	adc	r23, r24
 8dc:	89 1f       	adc	r24, r25
 8de:	9a 1f       	adc	r25, r26
 8e0:	a1 1d       	adc	r26, r1
 8e2:	68 0f       	add	r22, r24
 8e4:	79 1f       	adc	r23, r25
 8e6:	8a 1f       	adc	r24, r26
 8e8:	91 1d       	adc	r25, r1
 8ea:	a1 1d       	adc	r26, r1
 8ec:	6a 0f       	add	r22, r26
 8ee:	71 1d       	adc	r23, r1
 8f0:	81 1d       	adc	r24, r1
 8f2:	91 1d       	adc	r25, r1
 8f4:	a1 1d       	adc	r26, r1
 8f6:	20 d0       	rcall	.+64     	; 0x938 <__stack+0x39>
 8f8:	09 f4       	brne	.+2      	; 0x8fc <__ultoa_invert+0x48>
 8fa:	68 94       	set
 8fc:	3f 91       	pop	r19
 8fe:	2a e0       	ldi	r18, 0x0A	; 10
 900:	26 9f       	mul	r18, r22
 902:	11 24       	eor	r1, r1
 904:	30 19       	sub	r19, r0
 906:	30 5d       	subi	r19, 0xD0	; 208
 908:	31 93       	st	Z+, r19
 90a:	de f6       	brtc	.-74     	; 0x8c2 <__ultoa_invert+0xe>
 90c:	cf 01       	movw	r24, r30
 90e:	08 95       	ret
 910:	46 2f       	mov	r20, r22
 912:	47 70       	andi	r20, 0x07	; 7
 914:	40 5d       	subi	r20, 0xD0	; 208
 916:	41 93       	st	Z+, r20
 918:	b3 e0       	ldi	r27, 0x03	; 3
 91a:	0f d0       	rcall	.+30     	; 0x93a <__stack+0x3b>
 91c:	c9 f7       	brne	.-14     	; 0x910 <__stack+0x11>
 91e:	f6 cf       	rjmp	.-20     	; 0x90c <__stack+0xd>
 920:	46 2f       	mov	r20, r22
 922:	4f 70       	andi	r20, 0x0F	; 15
 924:	40 5d       	subi	r20, 0xD0	; 208
 926:	4a 33       	cpi	r20, 0x3A	; 58
 928:	18 f0       	brcs	.+6      	; 0x930 <__stack+0x31>
 92a:	49 5d       	subi	r20, 0xD9	; 217
 92c:	31 fd       	sbrc	r19, 1
 92e:	40 52       	subi	r20, 0x20	; 32
 930:	41 93       	st	Z+, r20
 932:	02 d0       	rcall	.+4      	; 0x938 <__stack+0x39>
 934:	a9 f7       	brne	.-22     	; 0x920 <__stack+0x21>
 936:	ea cf       	rjmp	.-44     	; 0x90c <__stack+0xd>
 938:	b4 e0       	ldi	r27, 0x04	; 4
 93a:	a6 95       	lsr	r26
 93c:	97 95       	ror	r25
 93e:	87 95       	ror	r24
 940:	77 95       	ror	r23
 942:	67 95       	ror	r22
 944:	ba 95       	dec	r27
 946:	c9 f7       	brne	.-14     	; 0x93a <__stack+0x3b>
 948:	00 97       	sbiw	r24, 0x00	; 0
 94a:	61 05       	cpc	r22, r1
 94c:	71 05       	cpc	r23, r1
 94e:	08 95       	ret
 950:	9b 01       	movw	r18, r22
 952:	ac 01       	movw	r20, r24
 954:	0a 2e       	mov	r0, r26
 956:	06 94       	lsr	r0
 958:	57 95       	ror	r21
 95a:	47 95       	ror	r20
 95c:	37 95       	ror	r19
 95e:	27 95       	ror	r18
 960:	ba 95       	dec	r27
 962:	c9 f7       	brne	.-14     	; 0x956 <__stack+0x57>
 964:	62 0f       	add	r22, r18
 966:	73 1f       	adc	r23, r19
 968:	84 1f       	adc	r24, r20
 96a:	95 1f       	adc	r25, r21
 96c:	a0 1d       	adc	r26, r0
 96e:	08 95       	ret

00000970 <__prologue_saves__>:
 970:	2f 92       	push	r2
 972:	3f 92       	push	r3
 974:	4f 92       	push	r4
 976:	5f 92       	push	r5
 978:	6f 92       	push	r6
 97a:	7f 92       	push	r7
 97c:	8f 92       	push	r8
 97e:	9f 92       	push	r9
 980:	af 92       	push	r10
 982:	bf 92       	push	r11
 984:	cf 92       	push	r12
 986:	df 92       	push	r13
 988:	ef 92       	push	r14
 98a:	ff 92       	push	r15
 98c:	0f 93       	push	r16
 98e:	1f 93       	push	r17
 990:	cf 93       	push	r28
 992:	df 93       	push	r29
 994:	cd b7       	in	r28, 0x3d	; 61
 996:	de b7       	in	r29, 0x3e	; 62
 998:	ca 1b       	sub	r28, r26
 99a:	db 0b       	sbc	r29, r27
 99c:	0f b6       	in	r0, 0x3f	; 63
 99e:	f8 94       	cli
 9a0:	de bf       	out	0x3e, r29	; 62
 9a2:	0f be       	out	0x3f, r0	; 63
 9a4:	cd bf       	out	0x3d, r28	; 61
 9a6:	09 94       	ijmp

000009a8 <__epilogue_restores__>:
 9a8:	2a 88       	ldd	r2, Y+18	; 0x12
 9aa:	39 88       	ldd	r3, Y+17	; 0x11
 9ac:	48 88       	ldd	r4, Y+16	; 0x10
 9ae:	5f 84       	ldd	r5, Y+15	; 0x0f
 9b0:	6e 84       	ldd	r6, Y+14	; 0x0e
 9b2:	7d 84       	ldd	r7, Y+13	; 0x0d
 9b4:	8c 84       	ldd	r8, Y+12	; 0x0c
 9b6:	9b 84       	ldd	r9, Y+11	; 0x0b
 9b8:	aa 84       	ldd	r10, Y+10	; 0x0a
 9ba:	b9 84       	ldd	r11, Y+9	; 0x09
 9bc:	c8 84       	ldd	r12, Y+8	; 0x08
 9be:	df 80       	ldd	r13, Y+7	; 0x07
 9c0:	ee 80       	ldd	r14, Y+6	; 0x06
 9c2:	fd 80       	ldd	r15, Y+5	; 0x05
 9c4:	0c 81       	ldd	r16, Y+4	; 0x04
 9c6:	1b 81       	ldd	r17, Y+3	; 0x03
 9c8:	aa 81       	ldd	r26, Y+2	; 0x02
 9ca:	b9 81       	ldd	r27, Y+1	; 0x01
 9cc:	ce 0f       	add	r28, r30
 9ce:	d1 1d       	adc	r29, r1
 9d0:	0f b6       	in	r0, 0x3f	; 63
 9d2:	f8 94       	cli
 9d4:	de bf       	out	0x3e, r29	; 62
 9d6:	0f be       	out	0x3f, r0	; 63
 9d8:	cd bf       	out	0x3d, r28	; 61
 9da:	ed 01       	movw	r28, r26
 9dc:	08 95       	ret

000009de <_exit>:
 9de:	f8 94       	cli

000009e0 <__stop_program>:
 9e0:	ff cf       	rjmp	.-2      	; 0x9e0 <__stop_program>
